{"version":3,"file":"src_app_features_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/core/components/loading/loading.component.ts","./src/app/core/components/loading/loading.component.html","./src/app/core/core.module.ts","./src/app/features/dashboard/components/layout/layout.component.ts","./src/app/features/dashboard/components/layout/layout.component.html","./src/app/features/dashboard/components/menu/menu.component.ts","./src/app/features/dashboard/components/menu/menu.component.html","./src/app/features/dashboard/dashboard.component.ts","./src/app/features/dashboard/dashboard.component.html","./src/app/features/dashboard/dashboard.module.ts","./src/app/features/dashboard/dashboard.routing.module.ts","./src/app/models/api/config.model.ts","./src/app/models/api/proxy.model.ts","./src/app/models/api/public_api.ts","./src/app/models/core/public_api.ts","./src/app/models/core/websocket.model.ts","./src/app/models/feature/menu.model.ts","./src/app/models/feature/public_api.ts","./src/app/models/public_api.ts","./src/app/services/api/clash-api.service.ts","./src/app/services/api/host.service.ts","./src/app/services/core/doc-cookies/doc-cookies.service.ts","./src/app/services/core/index.ts","./src/app/services/core/store/store.service.ts","./src/app/services/core/websocket/websocket.service.ts","./src/app/services/feature/connection.service.ts","./src/app/services/feature/log.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent {\n\n}\n","<div class=\"box\"></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingComponent } from './components/loading/loading.component';\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [CommonModule],\n  exports: [LoadingComponent],\n})\nexport class CoreModule {}\n","import { Component, OnInit, Self } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { Nav, NavValue } from '@model';\nimport { LogService } from 'src/app/services/feature/log.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  title = 'ng-clash';\n  showSideNav = false;\n  activatedMenu?: Nav;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  ngOnInit(): void {}\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n    <div class=\"sidenav-content\">\n      <mat-toolbar>\n        <app-loading></app-loading>\n        <div>Menu</div>\n      </mat-toolbar>\n      <ng-content select=\"[AppMenu]\"></ng-content>\n      <ng-content select=\"[AppExtra]\"></ng-content>\n    </div>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\" class=\"toolbar\">\n      <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\n        <!-- *ngIf=\"isHandset$ | async\"> -->\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Ng-Clash</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div class=\"content\">\n      <ng-content select=\"[AppContent]\"></ng-content>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {\n  Input,\n  Output,\n  Component,\n  ViewChild,\n  EventEmitter,\n} from '@angular/core';\nimport { MatSelectionList } from '@angular/material/list';\nimport { Nav } from '@model';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent {\n  @ViewChild(MatSelectionList)\n  matSelectionList!: MatSelectionList;\n\n  @Input()\n  navList: Nav[] = [];\n\n  @Output()\n  onChange = new EventEmitter<Nav>();\n}\n","<mat-nav-list>\n  <ng-container *ngFor=\"let nav of navList;let i = index;last as last\">\n    <mat-list-item [activated]=\"nav.activated\" (click)=\"onChange.emit(nav)\">\n      <mat-icon matListItemIcon>{{ nav.icon }}</mat-icon>\n      <span matListItemTitle>\n        {{nav.name}}\n      </span>\n    </mat-list-item>\n    <!-- <mat-divider *ngIf=\"!last\"></mat-divider> -->\n  </ng-container>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\nimport { Nav, NavValue } from '../../models/feature/menu.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogService } from '../../services/feature/log.service';\nimport { ConnectionService } from 'src/app/services/feature/connection.service';\nimport { StoreService } from 'src/app/services/core/store/store.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  navList: Nav[] = [\n    {\n      name: '代理',\n      value: NavValue.proxies,\n      icon: 'vpn_key',\n      activated: true,\n    },\n    {\n      name: '日志',\n      value: NavValue.logs,\n      icon: 'terminal',\n      activated: false,\n    },\n    {\n      name: '规则',\n      value: NavValue.rules,\n      icon: 'rule',\n      activated: false,\n    },\n    {\n      name: '连接',\n      value: NavValue.links,\n      icon: 'link',\n      activated: false,\n    },\n    {\n      name: '设置',\n      value: NavValue.settings,\n      icon: 'settings',\n      activated: false,\n    },\n  ];\n\n  'githubPages' =\n    'https://github.com/teddingdev/ng-clash/actions/workflows/github-pages.yml/badge.svg';\n  'pagesBuildDeployment' =\n    'https://github.com/teddingdev/ng-clash/actions/workflows/pages/pages-build-deployment/badge.svg';\n\n  clashVersion: {\n    premium: boolean;\n    version: string;\n  } | null = null;\n\n  handleSideNavActive(menu: Nav) {\n    this.navList = this.toggleSideNavActiveStatus(\n      this.navList,\n      (menuItem) => menuItem.value === menu.value\n    );\n    this.router.navigate([menu.value], {\n      relativeTo: this.route,\n    });\n  }\n\n  /** toggle sideNav highlight */\n  toggleSideNavActiveStatus(\n    menuList: Nav[],\n    compareFn: (menuItem: Nav) => boolean\n  ) {\n    return menuList.map((menuItem) => {\n      if (compareFn(menuItem)) {\n        menuItem.activated = true;\n      } else {\n        menuItem.activated = false;\n      }\n      return menuItem;\n    });\n  }\n\n  ngOnInit(): void {\n    this.navList = this.toggleSideNavActiveStatus(this.navList, (menuItem) =>\n      location.pathname.includes(menuItem.value)\n    );\n\n    // todo 获取日志\n    this.logService.initLog();\n    this.connectionService.initConnection();\n    // 获取版本号\n    this.storeService.clashVersion$.subscribe(\n      (data) => (this.clashVersion = data)\n    );\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private storeService: StoreService,\n    private connectionService: ConnectionService\n  ) {}\n}\n","<app-layout>\n  <!-- 菜单 -->\n  <ng-container AppMenu>\n    <app-menu AppMenu [navList]=\"navList\" (onChange)=\"handleSideNavActive($event)\"></app-menu>\n    <div class=\"app-extra\">\n      <div class=\"version\">\n        <div>CLASH VERSION</div>\n        <div> {{ clashVersion?.version }} </div>\n        <div *ngIf=\"clashVersion?.premium\">\n          <mat-chip [highlighted]=\"true\">Premium</mat-chip>\n        </div>\n      </div>\n      <div class=\"CI-status\">\n        <img [src]=\"githubPages\" alt=\"github-pages-badge.svg\">\n      </div>\n    </div>\n  </ng-container>\n  <!-- APP -->\n  <router-outlet AppContent></router-outlet>\n</app-layout>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { LayoutComponent } from './components/layout/layout.component';\n\nimport { MaterialModule } from '../../shared/material/material.module';\nimport { DashboardRoutingModule } from './dashboard.routing.module';\nimport { CoreModule } from 'src/app/core/core.module';\n\n@NgModule({\n  declarations: [LayoutComponent, MenuComponent, DashboardComponent],\n  imports: [CommonModule, DashboardRoutingModule, MaterialModule, CoreModule],\n})\nexport class DashboardModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nimport { NavValue } from '@model';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      { path: '', redirectTo: NavValue.proxies, pathMatch: 'full' },\n      {\n        path: NavValue.proxies,\n        loadChildren: () =>\n          import('../clash-proxy/clash-proxy.module').then(\n            (m) => m.ClashProxyModule\n          ),\n      },\n      {\n        path: NavValue.rules,\n        loadChildren: () =>\n          import('../clash-rules/clash-rules.module').then(\n            (m) => m.ClashRulesModule\n          ),\n      },\n      {\n        path: NavValue.logs,\n        loadChildren: () =>\n          import('../clash-logs/clash-logs.module').then(\n            (m) => m.ClashLogsModule\n          ),\n      },\n      {\n        path: NavValue.links,\n        loadChildren: () =>\n          import('../clash-links/clash-links.module').then(\n            (m) => m.ClashLinksModule\n          ),\n      },\n      {\n        path: NavValue.settings,\n        loadChildren: () =>\n          import('../clash-settings/clash-settings.module').then(\n            (m) => m.ClashSettingsModule\n          ),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","export interface Config {\n  port: number;\n  'socks-port': number;\n  'redir-port': number;\n  'tproxy-port': number;\n  'mixed-port': number;\n  'allow-lan': boolean;\n  'bind-address': string;\n  mode: keyof typeof ClashMode;\n  'log-level': string;\n  ipv6: boolean;\n}\n\nexport interface ExternalControlConfig {\n  hostname: string;\n  port: string;\n  key: string;\n}\n\nexport enum ClashMode {\n  /** 全局 */\n  'global' = 'Global',\n  /** 规则 */\n  'rule' = 'Rule',\n  /** 脚本 */\n  'script' = 'Script',\n  /** 直连 */\n  'direct' = 'Direct',\n}\n","export interface Proxy {\n  name: string;\n  type: ProxyType | UnUsedProxy;\n  history: History[];\n  udp: boolean;\n}\n\nexport interface Proxies {\n  proxies: Record<string, Proxy | PolicyGroup>;\n}\n\nexport interface ProxiesProvider {\n  name: string;\n  proxies: Array<PolicyGroup | Proxy>;\n  type: 'Proxy';\n  vehicleType: 'HTTP' | 'File' | 'Compatible';\n  updatedAt?: string;\n}\n\nexport interface ProxyProviders {\n  providers: Record<string, ProxiesProvider>;\n}\n\ninterface History {\n  time: string;\n  delay: number;\n}\n\nexport enum ProxyType {\n  Shadowsocks = 'Shadowsocks',\n  Vmess = 'Vmess',\n  Trojan = 'Trojan',\n  Socks = 'Socks',\n  Http = 'Http',\n  Snell = 'Snell',\n}\n\nexport enum UnUsedProxy {\n  Direct = 'Direct',\n  Reject = 'Reject',\n  GLOBAL = 'GLOBAL',\n}\n\nexport interface PolicyGroup {\n  name: string;\n  type: PolicyGroupType;\n  history: History[];\n  all: string[];\n  now: string;\n}\n\nexport enum PolicyGroupType {\n  Selector = 'Selector',\n  URLTest = 'URLTest',\n  Fallback = 'Fallback',\n  LoadBalance = 'LoadBalance',\n}\n\nexport type ProxyGroup = SelectProxyGroup &\n  UrlTestProxyGroup &\n  FallbackProxyGroup &\n  LoadBalanceGroup;\n\nexport interface SelectProxyGroup {\n  name?: string;\n\n  type?: 'select';\n\n  proxies?: string[]; // proxy names\n}\n\nexport interface LoadBalanceGroup {\n  name?: string;\n\n  type?: 'load-balance';\n\n  proxies?: string[]; // proxy names\n}\n\nexport interface FallbackProxyGroup {\n  name?: string;\n\n  type?: 'fallback';\n\n  proxies?: string[]; // proxy names\n\n  url?: string;\n\n  interval?: number; // second\n}\n\nexport interface UrlTestProxyGroup {\n  name?: string;\n\n  type?: 'url-test';\n\n  proxies?: string[]; // proxy names\n\n  url?: string;\n\n  interval?: number; // second\n}\n","export * from './proxy.model';\nexport * from './rule.model';\nexport * from './config.model';\nexport * from './connection.model';\n","export * from './websocket.model'\n","export enum WebSocketReadyState {\n  'CONNECTING',\n  'OPEN',\n  'CLOSING',\n  'CLOSED',\n}\n","export interface Nav {\n  name: string;\n  value: NavValue;\n  icon: string;\n  activated: boolean;\n}\n\nexport enum NavValue {\n  proxies = 'proxies',\n  logs = 'logs',\n  rules = 'rules',\n  links = 'links',\n  settings = 'settings',\n}\n","export * from './log.model';\nexport * from './menu.model';\n","export * from './core/public_api';\nexport * from './api/public_api';\nexport * from './feature/public_api';\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, catchError, of } from 'rxjs';\n\nimport { HostService } from './host.service';\n\nimport { Config, Proxies, ProxyProviders, Rules } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClashApiService {\n  private get hostname() {\n    return this.hostService.hostname;\n  }\n\n  fetchProxyMap() {\n    const url = `${this.hostname}/proxies`;\n    return this.http.get<Proxies>(url).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return [];\n      })\n    );\n  }\n\n  fetchProvideMap() {\n    const url = `${this.hostname}/providers/proxies`;\n    return this.http.get<ProxyProviders>(url);\n  }\n\n  putProxy(proxyName: string, policyName: string) {\n    const url = `${this.hostname}/proxies/${policyName}`;\n    return this.http.put<null>(url, { name: proxyName }).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  fetchConfig() {\n    const url = `${this.hostname}/configs`;\n    return this.http.get<Config>(url);\n  }\n\n  putConfig(body: Partial<Config>) {\n    const url = `${this.hostname}/configs`;\n    return this.http.put<null>(url, body).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  patchConfig(body: Partial<Config>) {\n    const url = `${this.hostname}/configs`;\n    return this.http.patch<null>(url, body).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  fetchRules() {\n    const url = `${this.hostname}/rules`;\n    console.log(\n      `🍅 -> file: clash-api.service.ts:58 -> ClashApiService -> fetchRules -> this.hostname:`,\n      this.hostname\n    );\n    console.log(\n      `🍅 -> file: clash-api.service.ts:58 -> ClashApiService -> fetchRules -> url:`,\n      url\n    );\n    return this.http.get<Rules>(url);\n  }\n\n  fetchVersion() {\n    const url = `${this.hostname}/version`;\n    return this.http.get<{\n      premium: boolean;\n      version: string;\n    }>(url);\n  }\n\n  constructor(private http: HttpClient, private hostService: HostService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { StoreService } from '../core/store/store.service';\nimport { ExternalControlConfig } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HostService {\n  get externalControlConfig(): ExternalControlConfig {\n    const defaultHostname = 'localhost';\n    const defaultPort = '7891';\n    let cachedHostname: string | undefined;\n    let cachedPort: string | undefined;\n    let cachedKey: string | undefined;\n    const cachedConfig = localStorage.getItem('ngClash');\n    if (cachedConfig) {\n      const ngClashConfig = JSON.parse(cachedConfig);\n      const externalControl = ngClashConfig['externalControl'] ?? {};\n      cachedHostname = externalControl['hostname'] || defaultHostname;\n      cachedPort = externalControl['port'] || defaultPort;\n      cachedKey = externalControl['key'];\n    }\n    return {\n      hostname: cachedHostname ?? defaultHostname,\n      port: cachedPort ?? defaultPort,\n      key: cachedKey ?? '',\n    };\n  }\n\n  set externalControlConfig(externalControl: ExternalControlConfig | null) {\n    if (null) {\n      return;\n    }\n    const cachedConfig = localStorage.getItem('ngClash') ?? '{}';\n    const ngClashConfig = JSON.parse(cachedConfig);\n    ngClashConfig['externalControl'] = externalControl;\n    localStorage.setItem('ngClash', JSON.stringify(ngClashConfig));\n  }\n\n  get host() {\n    return this.externalControlConfig.hostname;\n  }\n\n  get port() {\n    return this.externalControlConfig.port;\n  }\n\n  get hostname() {\n    return `http://${this.host}:${this.port}`;\n  }\n\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocCookiesService {\n  constructor() {}\n\n  getItem(sKey: string): any {\n    return (\n      decodeURIComponent(\n        document.cookie.replace(\n          new RegExp(\n            '(?:(?:^|.*;)\\\\s*' +\n              encodeURIComponent(sKey).replace(/[-.+*]/g, '\\\\$&') +\n              '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'\n          ),\n          '$1'\n        )\n      ) || null\n    );\n  }\n\n  setItem(\n    sKey: string,\n    sValue: string,\n    vEnd?: number | string | Date,\n    sPath?: string,\n    sDomain?: string,\n    bSecure?: string\n  ): boolean {\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\n      return false;\n    }\n    let sExpires = '';\n    if (vEnd) {\n      switch (vEnd.constructor) {\n        case Number:\n          sExpires =\n            vEnd === Infinity\n              ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT'\n              : '; max-age=' + vEnd;\n          break;\n        case String:\n          sExpires = '; expires=' + vEnd;\n          break;\n        case Date:\n          sExpires = '; expires=' + (vEnd as Date).toUTCString();\n          break;\n      }\n    }\n    document.cookie =\n      encodeURIComponent(sKey) +\n      '=' +\n      encodeURIComponent(sValue) +\n      sExpires +\n      (sDomain ? '; domain=' + sDomain : '') +\n      (sPath ? '; path=' + sPath : '') +\n      (bSecure ? '; secure' : '');\n    return true;\n  }\n\n  removeItem(sKey: string, sPath: string, sDomain: string): string | boolean {\n    if (!sKey || !this.hasItem(sKey)) {\n      return false;\n    }\n    document.cookie =\n      encodeURIComponent(sKey) +\n      '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' +\n      (sDomain ? '; domain=' + sDomain : '') +\n      (sPath ? '; path=' + sPath : '');\n    return true;\n  }\n\n  hasItem(sKey: string): boolean {\n    return new RegExp(\n      '(?:^|;\\\\s*)' +\n        encodeURIComponent(sKey).replace(/[-.+*]/g, '\\\\$&') +\n        '\\\\s*\\\\='\n    ).test(document.cookie);\n  }\n}\n","export * from './doc-cookies/doc-cookies.service';\nexport * from './websocket/websocket.service';\n","import { Injectable } from '@angular/core';\nimport { Config, ExternalControlConfig } from '@model';\nimport { Observable, Subject, switchMap } from 'rxjs';\nimport { ClashApiService } from '../../api/clash-api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreService {\n  private dashboardConfigSubject = new Subject<string>();\n\n  dashboardConfig$: Observable<Config> = this.dashboardConfigSubject.pipe(\n    switchMap(() => {\n      return this.clashApiService.fetchConfig();\n    })\n  );\n\n  clashVersion$ = this.clashApiService.fetchVersion();\n\n  configExpired() {\n    this.dashboardConfigSubject.next('new config');\n  }\n\n  fetchVersion() {}\n\n  constructor(private clashApiService: ClashApiService) {}\n}\n","import { WebSocketReadyState } from '@model';\n\nexport class WebsocketService {\n  /**websocket 实例*/\n  instance: WebSocket | null;\n\n  connected = (): boolean => {\n    const instance = this.instance;\n    if (!instance) {\n      return false;\n    }\n    if (\n      instance.readyState === WebSocketReadyState.CONNECTING ||\n      instance.readyState === WebSocketReadyState.OPEN\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /** websocket 关闭 */\n  onClose = () => {\n    const instance = this.instance;\n    if (!instance || !this.connected) {\n      return;\n    }\n    instance.close();\n    this.instance = null;\n  };\n  /** webSocket 已连接 */\n  onopen = (ev: Event): any => {\n    console.log('webSocket 已连接');\n    // this.wsHeartBeatStart();\n  };\n  /** webSocket 已关闭 */\n  onclose = (ev: Event): any => {\n    console.log('webSocket 已关闭');\n    // this.wsHeartBeatStop();\n  };\n\n  onmessage = (data: any) => {};\n\n  onerror = (error: any) => {\n    console.log(error);\n  };\n  /** webSocket 发送消息 */\n  send = (data: any) => {\n    if (!this.instance) {\n      return;\n    }\n    this.instance.send(JSON.stringify(data));\n  };\n  constructor(wsConfig: {\n    url: string;\n    onopen?: WebSocket['onopen'];\n    onerror?: WebSocket['onerror'];\n    onclose?: WebSocket['onclose'];\n    onmessage?: WebSocket['onmessage'];\n  }) {\n    const { url, onopen, onerror, onclose, onmessage } = wsConfig;\n    this.instance = new WebSocket(url);\n    this.instance.onopen = onopen || this.onopen;\n    this.instance.onerror = onerror || this.onerror;\n    this.instance.onclose = onclose || this.onclose;\n    this.instance.onmessage = onmessage || this.onmessage;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, map, pipe, scan } from 'rxjs';\n\nimport { WebsocketService } from '../core';\nimport { HostService } from '../api/host.service';\nimport { Snapshot } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionService {\n  private connection$ = new Subject<Snapshot>();\n  connectionList: Snapshot | null = null;\n\n  initConnection() {\n    this.connection$.subscribe((data) => {\n      this.connectionList = data;\n    });\n  }\n\n  constructor(private hostService: HostService) {\n    const host = this.hostService.host;\n    const port = this.hostService.port;\n\n    const connectionUrl = `ws://${host}:${port}/connections`;\n    const wsConnection = new WebsocketService({\n      url: connectionUrl,\n      onmessage: (event) => {\n        let data = null;\n        try {\n          data = JSON.parse(event.data) as Snapshot;\n        } catch (error) {\n          console.log(error);\n        }\n        if (data) {\n          this.connection$.next(data);\n        }\n      },\n    });\n    wsConnection.connected();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, catchError, map, of, scan } from 'rxjs';\nimport { WebsocketService } from '../core/websocket/websocket.service';\nimport { HostService } from '../api/host.service';\nimport { Log } from '@model';\n\nenum WSType {\n  'debug',\n  'info',\n  'warn',\n  'error',\n}\n\nconst scanLog = () =>\n  scan((accumulator: Log[], seed: Log) => {\n    accumulator.unshift(seed);\n    return accumulator;\n  }, []);\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  private debug$ = new Subject<string>();\n  private info$ = new Subject<string>();\n  private warn$ = new Subject<string>();\n  private error$ = new Subject<string>();\n\n  public debugLog: Log[] = [];\n  public infoLog: Log[] = [];\n  public warnLog: Log[] = [];\n  public errorLog: Log[] = [];\n\n  initLog() {\n    this.debug$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.debugLog = log;\n      });\n\n    this.info$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.infoLog = log;\n      });\n\n    this.warn$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.warnLog = log;\n      });\n\n    this.error$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.errorLog = log;\n      });\n  }\n\n  constructor(private hostService: HostService) {\n    const host = this.hostService.host;\n    const port = this.hostService.port;\n\n    const infoUrl = `ws://${host}:${port}/logs?level=info`;\n    const warnUrl = `ws://${host}:${port}/logs?level=warn`;\n    const debugUrl = `ws://${host}:${port}/logs?level=debug`;\n    const errorUrl = `ws://${host}:${port}/logs?level=error`;\n\n    const wsDebug = new WebsocketService({\n      url: debugUrl,\n      onmessage: (event) => {\n        this.debug$.next(event.data);\n      },\n    });\n    const wsInfo = new WebsocketService({\n      url: infoUrl,\n      onmessage: (event) => {\n        this.info$.next(event.data);\n      },\n    });\n    const wsWarn = new WebsocketService({\n      url: warnUrl,\n      onmessage: (event) => {\n        this.warn$.next(event.data);\n      },\n    });\n    const wsErrorUrl = new WebsocketService({\n      url: errorUrl,\n      onmessage: (event) => {\n        this.error$.next(event.data);\n      },\n    });\n\n    wsDebug.connected();\n    wsInfo.connected();\n    wsWarn.connected();\n    wsErrorUrl.connected();\n  }\n}\n"],"names":["LoadingComponent","selectors","decls","vars","consts","template","i0","CommonModule","CoreModule","declarations","imports","exports","map","shareReplay","Breakpoints","LayoutComponent","ngOnInit","constructor","breakpointObserver","observe","Handset","pipe","result","matches","ngContentSelectors","EventEmitter","MatSelectionList","MenuComponent","viewQuery","NavValue","DashboardComponent","handleSideNavActive","menu","navList","toggleSideNavActiveStatus","menuItem","value","router","navigate","relativeTo","route","menuList","compareFn","activated","location","pathname","includes","logService","initLog","connectionService","initConnection","storeService","clashVersion$","subscribe","data","clashVersion","name","proxies","icon","logs","rules","links","settings","ctx","MaterialModule","DashboardRoutingModule","DashboardModule","RouterModule","routes","path","component","children","redirectTo","pathMatch","loadChildren","then","m","ClashProxyModule","ClashRulesModule","ClashLogsModule","ClashLinksModule","ClashSettingsModule","forChild","ClashMode","ProxyType","UnUsedProxy","PolicyGroupType","WebSocketReadyState","catchError","of","ClashApiService","hostname","hostService","fetchProxyMap","url","http","get","error","console","log","fetchProvideMap","putProxy","proxyName","policyName","put","undefined","fetchConfig","putConfig","body","patchConfig","patch","fetchRules","fetchVersion","factory","providedIn","HostService","externalControlConfig","defaultHostname","defaultPort","cachedHostname","cachedPort","cachedKey","cachedConfig","localStorage","getItem","ngClashConfig","JSON","parse","externalControl","port","key","setItem","stringify","host","DocCookiesService","sKey","decodeURIComponent","document","cookie","replace","RegExp","encodeURIComponent","sValue","vEnd","sPath","sDomain","bSecure","test","sExpires","Number","Infinity","String","Date","toUTCString","removeItem","hasItem","Subject","switchMap","StoreService","configExpired","dashboardConfigSubject","next","clashApiService","WebsocketService","wsConfig","instance","readyState","CONNECTING","OPEN","connected","close","ev","send","onopen","onerror","onclose","onmessage","WebSocket","ConnectionService","connection$","connectionList","connectionUrl","wsConnection","event","scan","WSType","scanLog","accumulator","seed","unshift","LogService","debug$","time","debugLog","info$","infoLog","warn$","warnLog","error$","errorLog","infoUrl","warnUrl","debugUrl","errorUrl","wsDebug","wsInfo","wsWarn","wsErrorUrl"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}