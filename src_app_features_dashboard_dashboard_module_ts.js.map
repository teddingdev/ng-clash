{"version":3,"file":"src_app_features_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/core/components/loading/loading.component.ts","./src/app/core/components/loading/loading.component.html","./src/app/core/core.module.ts","./src/app/features/dashboard/components/layout/layout.component.ts","./src/app/features/dashboard/components/layout/layout.component.html","./src/app/features/dashboard/components/menu/menu.component.ts","./src/app/features/dashboard/components/menu/menu.component.html","./src/app/features/dashboard/dashboard.component.ts","./src/app/features/dashboard/dashboard.component.html","./src/app/features/dashboard/dashboard.module.ts","./src/app/features/dashboard/dashboard.routing.module.ts","./src/app/models/api/config.model.ts","./src/app/models/api/proxy.model.ts","./src/app/models/api/public_api.ts","./src/app/models/core/public_api.ts","./src/app/models/core/websocket.model.ts","./src/app/models/feature/menu.model.ts","./src/app/models/feature/public_api.ts","./src/app/models/public_api.ts","./src/app/services/api/host.service.ts","./src/app/services/core/doc-cookies/doc-cookies.service.ts","./src/app/services/core/index.ts","./src/app/services/core/websocket/websocket.service.ts","./src/app/services/feature/connection.service.ts","./src/app/services/feature/log.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent {\n\n}\n","<div class=\"box\"></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingComponent } from './components/loading/loading.component';\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [CommonModule],\n  exports: [LoadingComponent],\n})\nexport class CoreModule {}\n","import { Component, OnInit, Self } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { Nav, NavValue } from '@model';\nimport { LogService } from 'src/app/services/feature/log.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  title = 'ng-clash';\n  showSideNav = false;\n  activatedMenu?: Nav;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  ngOnInit(): void {}\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>\n      <app-loading></app-loading>Menu\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\" class=\"toolbar\">\n      <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\n        <!-- *ngIf=\"isHandset$ | async\"> -->\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Ng-Clash</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div class=\"content\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {\n  Input,\n  Output,\n  Component,\n  ViewChild,\n  EventEmitter,\n} from '@angular/core';\nimport { MatSelectionList } from '@angular/material/list';\nimport { Nav } from '@model';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent {\n  @ViewChild(MatSelectionList)\n  matSelectionList!: MatSelectionList;\n\n  @Input()\n  navList: Nav[] = [];\n\n  @Output()\n  onChange = new EventEmitter<Nav>();\n}\n","<mat-nav-list>\n  <ng-container *ngFor=\"let nav of navList;let i = index;last as last\">\n    <mat-list-item [activated]=\"nav.activated\" (click)=\"onChange.emit(nav)\">\n      <mat-icon matListItemIcon>{{ nav.icon }}</mat-icon>\n      <span matListItemTitle>\n        {{nav.name}}\n      </span>\n    </mat-list-item>\n    <!-- <mat-divider *ngIf=\"!last\"></mat-divider> -->\n  </ng-container>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\nimport { Nav, NavValue } from '../../models/feature/menu.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogService } from '../../services/feature/log.service';\nimport { ConnectionService } from 'src/app/services/feature/connection.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  navList: Nav[] = [\n    {\n      name: '代理',\n      value: NavValue.proxies,\n      icon: 'vpn_key',\n      activated: true,\n    },\n    {\n      name: '日志',\n      value: NavValue.logs,\n      icon: 'terminal',\n      activated: false,\n    },\n    {\n      name: '规则',\n      value: NavValue.rules,\n      icon: 'rule',\n      activated: false,\n    },\n    {\n      name: '连接',\n      value: NavValue.links,\n      icon: 'link',\n      activated: false,\n    },\n    {\n      name: '设置',\n      value: NavValue.settings,\n      icon: 'settings',\n      activated: false,\n    },\n  ];\n\n  handleSideNavActive(menu: Nav) {\n    this.navList = this.toggleSideNavActiveStatus(\n      this.navList,\n      (menuItem) => menuItem.value === menu.value\n    );\n    this.router.navigate([menu.value], {\n      relativeTo: this.route,\n    });\n  }\n\n  /** toggle sideNav highlight */\n  toggleSideNavActiveStatus(\n    menuList: Nav[],\n    compareFn: (menuItem: Nav) => boolean\n  ) {\n    return menuList.map((menuItem) => {\n      if (compareFn(menuItem)) {\n        menuItem.activated = true;\n      } else {\n        menuItem.activated = false;\n      }\n      return menuItem;\n    });\n  }\n\n  ngOnInit(): void {\n    this.navList = this.toggleSideNavActiveStatus(this.navList, (menuItem) =>\n      location.pathname.includes(menuItem.value)\n    );\n\n    // todo 获取日志\n    this.logService.initLog();\n    this.connectionService.initConnection();\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private connectionService: ConnectionService\n  ) {}\n}\n","<app-layout>\n  <app-menu [navList]=\"navList\" (onChange)=\"handleSideNavActive($event)\"></app-menu>\n</app-layout>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { LayoutComponent } from './components/layout/layout.component';\n\nimport { MaterialModule } from '../../shared/material/material.module';\nimport { DashboardRoutingModule } from './dashboard.routing.module';\nimport { CoreModule } from 'src/app/core/core.module';\n\n@NgModule({\n  declarations: [LayoutComponent, MenuComponent, DashboardComponent],\n  imports: [CommonModule, DashboardRoutingModule, MaterialModule, CoreModule],\n})\nexport class DashboardModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nimport { NavValue } from '@model';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      { path: '', redirectTo: NavValue.proxies, pathMatch: 'full' },\n      {\n        path: NavValue.proxies,\n        loadChildren: () =>\n          import('../clash-proxy/clash-proxy.module').then(\n            (m) => m.ClashProxyModule\n          ),\n      },\n      {\n        path: NavValue.rules,\n        loadChildren: () =>\n          import('../clash-rules/clash-rules.module').then(\n            (m) => m.ClashRulesModule\n          ),\n      },\n      {\n        path: NavValue.logs,\n        loadChildren: () =>\n          import('../clash-logs/clash-logs.module').then(\n            (m) => m.ClashLogsModule\n          ),\n      },\n      {\n        path: NavValue.links,\n        loadChildren: () =>\n          import('../clash-links/clash-links.module').then(\n            (m) => m.ClashLinksModule\n          ),\n      },\n      {\n        path: NavValue.settings,\n        loadChildren: () =>\n          import('../clash-settings/clash-settings.module').then(\n            (m) => m.ClashSettingsModule\n          ),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","export interface Config {\n  port: number;\n  'socks-port': number;\n  'redir-port': number;\n  'tproxy-port': number;\n  'mixed-port': number;\n  'allow-lan': boolean;\n  'bind-address': string;\n  mode: keyof typeof ClashMode;\n  'log-level': string;\n  ipv6: boolean;\n}\n\nexport interface ExternalControlConfig {\n  hostname: string;\n  port: string;\n  key: string;\n}\n\nexport enum ClashMode {\n  /** 全局 */\n  'global' = 'Global',\n  /** 规则 */\n  'rule' = 'Rule',\n  /** 脚本 */\n  'script' = 'Script',\n  /** 直连 */\n  'direct' = 'Direct',\n}\n","export interface Proxy {\n  name: string;\n  type: ProxyType | UnUsedProxy;\n  history: History[];\n  udp: boolean;\n}\n\nexport interface Proxies {\n  proxies: Record<string, Proxy | PolicyGroup>;\n}\n\nexport interface ProxiesProvider {\n  name: string;\n  proxies: Array<PolicyGroup | Proxy>;\n  type: 'Proxy';\n  vehicleType: 'HTTP' | 'File' | 'Compatible';\n  updatedAt?: string;\n}\n\nexport interface ProxyProviders {\n  providers: Record<string, ProxiesProvider>;\n}\n\ninterface History {\n  time: string;\n  delay: number;\n}\n\nexport enum ProxyType {\n  Shadowsocks = 'Shadowsocks',\n  Vmess = 'Vmess',\n  Trojan = 'Trojan',\n  Socks = 'Socks',\n  Http = 'Http',\n  Snell = 'Snell',\n}\n\nexport enum UnUsedProxy {\n  Direct = 'Direct',\n  Reject = 'Reject',\n  GLOBAL = 'GLOBAL',\n}\n\nexport interface PolicyGroup {\n  name: string;\n  type: PolicyGroupType;\n  history: History[];\n  all: string[];\n  now: string;\n}\n\nexport enum PolicyGroupType {\n  Selector = 'Selector',\n  URLTest = 'URLTest',\n  Fallback = 'Fallback',\n  LoadBalance = 'LoadBalance',\n}\n\nexport type ProxyGroup = SelectProxyGroup &\n  UrlTestProxyGroup &\n  FallbackProxyGroup &\n  LoadBalanceGroup;\n\nexport interface SelectProxyGroup {\n  name?: string;\n\n  type?: 'select';\n\n  proxies?: string[]; // proxy names\n}\n\nexport interface LoadBalanceGroup {\n  name?: string;\n\n  type?: 'load-balance';\n\n  proxies?: string[]; // proxy names\n}\n\nexport interface FallbackProxyGroup {\n  name?: string;\n\n  type?: 'fallback';\n\n  proxies?: string[]; // proxy names\n\n  url?: string;\n\n  interval?: number; // second\n}\n\nexport interface UrlTestProxyGroup {\n  name?: string;\n\n  type?: 'url-test';\n\n  proxies?: string[]; // proxy names\n\n  url?: string;\n\n  interval?: number; // second\n}\n","export * from './proxy.model';\nexport * from './rule.model';\nexport * from './config.model';\nexport * from './connection.model';\n","export * from './websocket.model'\n","export enum WebSocketReadyState {\n  'CONNECTING',\n  'OPEN',\n  'CLOSING',\n  'CLOSED',\n}\n","export interface Nav {\n  name: string;\n  value: NavValue;\n  icon: string;\n  activated: boolean;\n}\n\nexport enum NavValue {\n  proxies = 'proxies',\n  logs = 'logs',\n  rules = 'rules',\n  links = 'links',\n  settings = 'settings',\n}\n","export * from './log.model';\nexport * from './menu.model';\n","export * from './core/public_api';\nexport * from './api/public_api';\nexport * from './feature/public_api';\n","import { Injectable } from '@angular/core';\nimport { StoreService } from '../core/store/store.service';\nimport { ExternalControlConfig } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HostService {\n  get externalControlConfig(): ExternalControlConfig {\n    const defaultHostname = 'localhost';\n    const defaultPort = '7891';\n    let cachedHostname: string | undefined;\n    let cachedPort: string | undefined;\n    let cachedKey: string | undefined;\n    const cachedConfig = localStorage.getItem('ngClash');\n    if (cachedConfig) {\n      const ngClashConfig = JSON.parse(cachedConfig);\n      const externalControl = ngClashConfig['externalControl'] ?? {};\n      cachedHostname = externalControl['hostname'] || defaultHostname;\n      cachedPort = externalControl['port'] || defaultPort;\n      cachedKey = externalControl['key'];\n    }\n    return {\n      hostname: cachedHostname ?? defaultHostname,\n      port: cachedPort ?? defaultPort,\n      key: cachedKey ?? '',\n    };\n  }\n\n  set externalControlConfig(externalControl: ExternalControlConfig | null) {\n    if (null) {\n      return;\n    }\n    const cachedConfig = localStorage.getItem('ngClash') ?? '{}';\n    const ngClashConfig = JSON.parse(cachedConfig);\n    ngClashConfig['externalControl'] = externalControl;\n    localStorage.setItem('ngClash', JSON.stringify(ngClashConfig));\n  }\n\n  get host() {\n    return this.externalControlConfig.hostname;\n  }\n\n  get port() {\n    return this.externalControlConfig.port;\n  }\n\n  get hostname() {\n    return `http://${this.host}:${this.port}`;\n  }\n\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocCookiesService {\n  constructor() {}\n\n  getItem(sKey: string): any {\n    return (\n      decodeURIComponent(\n        document.cookie.replace(\n          new RegExp(\n            '(?:(?:^|.*;)\\\\s*' +\n              encodeURIComponent(sKey).replace(/[-.+*]/g, '\\\\$&') +\n              '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'\n          ),\n          '$1'\n        )\n      ) || null\n    );\n  }\n\n  setItem(\n    sKey: string,\n    sValue: string,\n    vEnd?: number | string | Date,\n    sPath?: string,\n    sDomain?: string,\n    bSecure?: string\n  ): boolean {\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\n      return false;\n    }\n    let sExpires = '';\n    if (vEnd) {\n      switch (vEnd.constructor) {\n        case Number:\n          sExpires =\n            vEnd === Infinity\n              ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT'\n              : '; max-age=' + vEnd;\n          break;\n        case String:\n          sExpires = '; expires=' + vEnd;\n          break;\n        case Date:\n          sExpires = '; expires=' + (vEnd as Date).toUTCString();\n          break;\n      }\n    }\n    document.cookie =\n      encodeURIComponent(sKey) +\n      '=' +\n      encodeURIComponent(sValue) +\n      sExpires +\n      (sDomain ? '; domain=' + sDomain : '') +\n      (sPath ? '; path=' + sPath : '') +\n      (bSecure ? '; secure' : '');\n    return true;\n  }\n\n  removeItem(sKey: string, sPath: string, sDomain: string): string | boolean {\n    if (!sKey || !this.hasItem(sKey)) {\n      return false;\n    }\n    document.cookie =\n      encodeURIComponent(sKey) +\n      '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' +\n      (sDomain ? '; domain=' + sDomain : '') +\n      (sPath ? '; path=' + sPath : '');\n    return true;\n  }\n\n  hasItem(sKey: string): boolean {\n    return new RegExp(\n      '(?:^|;\\\\s*)' +\n        encodeURIComponent(sKey).replace(/[-.+*]/g, '\\\\$&') +\n        '\\\\s*\\\\='\n    ).test(document.cookie);\n  }\n}\n","export * from './doc-cookies/doc-cookies.service';\nexport * from './websocket/websocket.service';\n","import { WebSocketReadyState } from '@model';\n\nexport class WebsocketService {\n  /**websocket 实例*/\n  instance: WebSocket | null;\n\n  connected = (): boolean => {\n    const instance = this.instance;\n    if (!instance) {\n      return false;\n    }\n    if (\n      instance.readyState === WebSocketReadyState.CONNECTING ||\n      instance.readyState === WebSocketReadyState.OPEN\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /** websocket 关闭 */\n  onClose = () => {\n    const instance = this.instance;\n    if (!instance || !this.connected) {\n      return;\n    }\n    instance.close();\n    this.instance = null;\n  };\n  /** webSocket 已连接 */\n  onopen = (ev: Event): any => {\n    console.log('webSocket 已连接');\n    // this.wsHeartBeatStart();\n  };\n  /** webSocket 已关闭 */\n  onclose = (ev: Event): any => {\n    console.log('webSocket 已关闭');\n    // this.wsHeartBeatStop();\n  };\n\n  onmessage = (data: any) => {\n    console.log(\n      `🍅 -> file: websocket.service.ts:67 -> WebsocketService -> data:`,\n      data\n    );\n  };\n\n  onerror = (error: any) => {\n    console.log(error);\n  };\n  /** webSocket 发送消息 */\n  send = (data: any) => {\n    if (!this.instance) {\n      return;\n    }\n    this.instance.send(JSON.stringify(data));\n  };\n  constructor(wsConfig: {\n    url: string;\n    onopen?: WebSocket['onopen'];\n    onerror?: WebSocket['onerror'];\n    onclose?: WebSocket['onclose'];\n    onmessage?: WebSocket['onmessage'];\n  }) {\n    const { url, onopen, onerror, onclose, onmessage } = wsConfig;\n    this.instance = new WebSocket(url);\n    this.instance.onopen = onopen || this.onopen;\n    this.instance.onerror = onerror || this.onerror;\n    this.instance.onclose = onclose || this.onclose;\n    this.instance.onmessage = onmessage || this.onmessage;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, map, pipe, scan } from 'rxjs';\n\nimport { WebsocketService } from '../core';\nimport { HostService } from '../api/host.service';\nimport { Snapshot } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionService {\n  private connection$ = new Subject<Snapshot>();\n  connectionList: Snapshot | null = null;\n\n  initConnection() {\n    this.connection$.subscribe((data) => {\n      this.connectionList = data;\n    });\n  }\n\n  constructor(private hostService: HostService) {\n    const host = this.hostService.host;\n    const port = this.hostService.port;\n\n    const connectionUrl = `ws://${host}:${port}/connections`;\n    const wsConnection = new WebsocketService({\n      url: connectionUrl,\n      onmessage: (event) => {\n        let data = null;\n        try {\n          data = JSON.parse(event.data) as Snapshot;\n        } catch (error) {\n          console.log(error);\n        }\n        if (data) {\n          this.connection$.next(data);\n        }\n      },\n    });\n    wsConnection.connected();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, catchError, map, of, scan } from 'rxjs';\nimport { WebsocketService } from '../core/websocket/websocket.service';\nimport { HostService } from '../api/host.service';\nimport { Log } from '@model';\n\nenum WSType {\n  'debug',\n  'info',\n  'warn',\n  'error',\n}\n\nconst scanLog = () =>\n  scan((accumulator: Log[], seed: Log) => {\n    accumulator.unshift(seed);\n    return accumulator;\n  }, []);\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  private debug$ = new Subject<string>();\n  private info$ = new Subject<string>();\n  private warn$ = new Subject<string>();\n  private error$ = new Subject<string>();\n\n  public debugLog: Log[] = [];\n  public infoLog: Log[] = [];\n  public warnLog: Log[] = [];\n  public errorLog: Log[] = [];\n\n  initLog() {\n    this.debug$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.debugLog = log;\n      });\n\n    this.info$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.infoLog = log;\n      });\n\n    this.warn$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.warnLog = log;\n      });\n\n    this.error$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.errorLog = log;\n      });\n  }\n\n  constructor(private hostService: HostService) {\n    const host = this.hostService.host;\n    const port = this.hostService.port;\n\n    const infoUrl = `ws://${host}:${port}/logs?level=info`;\n    const warnUrl = `ws://${host}:${port}/logs?level=warn`;\n    const debugUrl = `ws://${host}:${port}/logs?level=debug`;\n    const errorUrl = `ws://${host}:${port}/logs?level=error`;\n\n    const wsDebug = new WebsocketService({\n      url: debugUrl,\n      onmessage: (event) => {\n        this.debug$.next(event.data);\n      },\n    });\n    const wsInfo = new WebsocketService({\n      url: infoUrl,\n      onmessage: (event) => {\n        this.info$.next(event.data);\n      },\n    });\n    const wsWarn = new WebsocketService({\n      url: warnUrl,\n      onmessage: (event) => {\n        this.warn$.next(event.data);\n      },\n    });\n    const wsErrorUrl = new WebsocketService({\n      url: errorUrl,\n      onmessage: (event) => {\n        this.error$.next(event.data);\n      },\n    });\n\n    wsDebug.connected();\n    wsInfo.connected();\n    wsWarn.connected();\n    wsErrorUrl.connected();\n  }\n}\n"],"names":["LoadingComponent","selectors","decls","vars","consts","template","i0","CommonModule","CoreModule","declarations","imports","exports","map","shareReplay","Breakpoints","LayoutComponent","ngOnInit","constructor","breakpointObserver","observe","Handset","pipe","result","matches","ngContentSelectors","EventEmitter","MatSelectionList","MenuComponent","viewQuery","NavValue","DashboardComponent","handleSideNavActive","menu","navList","toggleSideNavActiveStatus","menuItem","value","router","navigate","relativeTo","route","menuList","compareFn","activated","location","pathname","includes","logService","initLog","connectionService","initConnection","name","proxies","icon","logs","rules","links","settings","ctx","MaterialModule","DashboardRoutingModule","DashboardModule","RouterModule","routes","path","component","children","redirectTo","pathMatch","loadChildren","then","m","ClashProxyModule","ClashRulesModule","ClashLogsModule","ClashLinksModule","ClashSettingsModule","forChild","ClashMode","ProxyType","UnUsedProxy","PolicyGroupType","WebSocketReadyState","HostService","externalControlConfig","defaultHostname","defaultPort","cachedHostname","cachedPort","cachedKey","cachedConfig","localStorage","getItem","ngClashConfig","JSON","parse","externalControl","hostname","port","key","setItem","stringify","host","factory","providedIn","DocCookiesService","sKey","decodeURIComponent","document","cookie","replace","RegExp","encodeURIComponent","sValue","vEnd","sPath","sDomain","bSecure","test","sExpires","Number","Infinity","String","Date","toUTCString","removeItem","hasItem","WebsocketService","wsConfig","instance","readyState","CONNECTING","OPEN","connected","close","ev","console","log","data","error","send","url","onopen","onerror","onclose","onmessage","WebSocket","Subject","ConnectionService","connection$","subscribe","connectionList","hostService","connectionUrl","wsConnection","event","next","catchError","of","scan","WSType","scanLog","accumulator","seed","unshift","LogService","debug$","time","debugLog","info$","infoLog","warn$","warnLog","error$","errorLog","infoUrl","warnUrl","debugUrl","errorUrl","wsDebug","wsInfo","wsWarn","wsErrorUrl"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}