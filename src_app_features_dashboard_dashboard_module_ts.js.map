{"version":3,"file":"src_app_features_dashboard_dashboard_module_ts.js","mappings":";;;;;;;;;;;;;;;AAOM,MAAOA,gBAAgB;EAAA,QAAAC,CAAA;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA;UAAhBF,gBAAgB;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP7BE,uDAAA,aAAuB;;;;;;;;;;;;;;;;;;;;;;ACCwB;AAC2B;;AAOpE,MAAOG,UAAU;EAAA,QAAAb,CAAA;qBAAVa,UAAU;EAAA;EAAA,QAAAZ,EAAA;UAAVY;EAAU;EAAA,QAAAC,EAAA;cAHXF,yDAAY;EAAA;;;sHAGXC,UAAU;IAAAE,YAAA,GAJNhB,mFAAgB;IAAAiB,OAAA,GACrBJ,yDAAY;IAAAK,OAAA,GACZlB,mFAAgB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACJsB;AACoB;;;;;;;;;;;AAUhE,MAAOsB,eAAe;EAY1BC,QAAQA,CAAA,GAAU;EAElBC,YAAoBC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IAbtC,KAAAC,KAAK,GAAG,UAAU;IAClB,KAAAC,WAAW,GAAG,KAAK;IAGnB,KAAAC,UAAU,GAAwB,IAAI,CAACH,kBAAkB,CACtDI,OAAO,CAACR,4DAAW,CAACS,OAAO,CAAC,CAC5BC,IAAI,CACHZ,mDAAG,CAAEa,MAAM,IAAKA,MAAM,CAACC,OAAO,CAAC,EAC/Bb,2DAAW,EAAE,CACd;EAI0D;EAAC,QAAAnB,CAAA;qBAdnDqB,eAAe,EAAAX,+DAAA,CAAAwB,mEAAA;EAAA;EAAA,QAAAjC,EAAA;UAAfoB,eAAe;IAAAnB,SAAA;IAAAkC,kBAAA,EAAAC,GAAA;IAAAlC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAgC,yBAAA9B,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;QCd5BE,4DAAA,+BAAiD;;;;QAG7CA,4DAAA,aAA6B;QAEzBA,uDAAA,kBAA2B;QAC3BA,4DAAA,UAAK;QAAAA,oDAAA,YAAI;QAAAA,0DAAA,EAAM;QAEjBA,0DAAA,IAA4C;QAC5CA,0DAAA,OAA6C;QAC/CA,0DAAA,EAAM;QAERA,4DAAA,2BAAqB;QAEiDA,wDAAA,mBAAAkC,kDAAA;UAAAlC,2DAAA,CAAAoC,GAAA;UAAA,MAAAC,GAAA,GAAArC,yDAAA;UAAA,OAASA,yDAAA,CAAAqC,GAAA,CAAAG,MAAA,EAAe;QAAA,EAAC;QAEzFxC,4DAAA,mBAA4C;QAAAA,oDAAA,YAAI;QAAAA,0DAAA,EAAW;QAE7DA,4DAAA,YAAM;QAAAA,oDAAA,gBAAQ;QAAAA,0DAAA,EAAO;QAGvBA,4DAAA,cAAqB;QACnBA,0DAAA,OAA+C;QACjDA,0DAAA,EAAM;;;QArBKA,uDAAA,GAA+C;QAA/CA,wDAAA,SAAAA,yDAAA,OAAAD,GAAA,CAAAkB,UAAA,oBAA+C,WAAAjB,yDAAA,OAAAD,GAAA,CAAAkB,UAAA;QADPjB,yDAAA,SAAAA,yDAAA,OAAAD,GAAA,CAAAkB,UAAA,4BAA4D;;;;;;;;;;;;;;;;;;;;;;;;ACK5F;AACmC;;;;;;;;ICNxDjB,qEAAA,GAAqE;IACnEA,4DAAA,uBAAwE;IAA7BA,wDAAA,mBAAAgD,qEAAA;MAAA,MAAAC,WAAA,GAAAjD,2DAAA,CAAAkD,GAAA;MAAA,MAAAC,MAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,MAAA,GAAArD,2DAAA;MAAA,OAASA,yDAAA,CAAAqD,MAAA,CAAAE,QAAA,CAAAC,IAAA,CAAAL,MAAA,CAAkB;IAAA,EAAC;IACrEnD,4DAAA,kBAA0B;IAAAA,oDAAA,GAAc;IAAAA,0DAAA,EAAW;IACnDA,4DAAA,cAAuB;IACrBA,oDAAA,GACF;IAAAA,0DAAA,EAAO;IAGXA,mEAAA,EAAe;;;;IAPEA,uDAAA,GAA2B;IAA3BA,wDAAA,cAAAmD,MAAA,CAAAO,SAAA,CAA2B;IACd1D,uDAAA,GAAc;IAAdA,+DAAA,CAAAmD,MAAA,CAAAS,IAAA,CAAc;IAEtC5D,uDAAA,GACF;IADEA,gEAAA,MAAAmD,MAAA,CAAAW,IAAA,MACF;;;ADSA,MAAOC,aAAa;EAL1BlD,YAAA;IAUE,KAAAmD,OAAO,GAAU,EAAE;IAGnB,KAAAT,QAAQ,GAAG,IAAIV,uDAAY,EAAO;;EACnC,QAAAvD,CAAA;qBATYyE,aAAa;EAAA;EAAA,QAAAxE,EAAA;UAAbwE,aAAa;IAAAvE,SAAA;IAAAyE,SAAA,WAAAC,oBAAApE,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;kEACbgD,oEAAgB;;;;;;;;;;;;;;;;;;QChB7B9C,4DAAA,mBAAc;QACZA,wDAAA,IAAAoE,qCAAA,0BAQe;QACjBpE,0DAAA,EAAe;;;QATiBA,uDAAA,GAAW;QAAXA,wDAAA,YAAAD,GAAA,CAAAiE,OAAA,CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqB;;;;;;;;;;;;ICOxDhE,4DAAA,UAAmC;IACFA,oDAAA,cAAO;IAAAA,0DAAA,EAAW;;;IAAvCA,uDAAA,GAAoB;IAApBA,wDAAA,qBAAoB;;;ADGlC,MAAOsE,kBAAkB;EA4C7BC,mBAAmBA,CAACC,IAAS;IAC3B,IAAI,CAACR,OAAO,GAAG,IAAI,CAACS,yBAAyB,CAC3C,IAAI,CAACT,OAAO,EACXU,QAAQ,IAAKA,QAAQ,CAACC,KAAK,KAAKH,IAAI,CAACG,KAAK,CAC5C;IACD,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAACL,IAAI,CAACG,KAAK,CAAC,EAAE;MACjCG,UAAU,EAAE,IAAI,CAACC;KAClB,CAAC;EACJ;EAEA;EACAN,yBAAyBA,CACvBO,QAAe,EACfC,SAAqC;IAErC,OAAOD,QAAQ,CAACxE,GAAG,CAAEkE,QAAQ,IAAI;MAC/B,IAAIO,SAAS,CAACP,QAAQ,CAAC,EAAE;QACvBA,QAAQ,CAAChB,SAAS,GAAG,IAAI;OAC1B,MAAM;QACLgB,QAAQ,CAAChB,SAAS,GAAG,KAAK;;MAE5B,OAAOgB,QAAQ;IACjB,CAAC,CAAC;EACJ;EAEA9D,QAAQA,CAAA;IACN,IAAI,CAACoD,OAAO,GAAG,IAAI,CAACS,yBAAyB,CAAC,IAAI,CAACT,OAAO,EAAGU,QAAQ,IACnEQ,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAACV,QAAQ,CAACC,KAAK,CAAC,CAC3C;IAED;IACA,IAAI,CAACU,UAAU,CAACC,OAAO,EAAE;IACzB,IAAI,CAACC,iBAAiB,CAACC,cAAc,EAAE;IACvC;IACA,IAAI,CAACC,YAAY,CAACC,aAAa,CAACC,SAAS,CACtCC,IAAI,IAAM,IAAI,CAACC,YAAY,GAAGD,IAAK,CACrC;EACH;EAEA/E,YACU+D,MAAc,EACdG,KAAqB,EACrBM,UAAsB,EACtBI,YAA0B,EAC1BF,iBAAoC;IAJpC,KAAAX,MAAM,GAANA,MAAM;IACN,KAAAG,KAAK,GAALA,KAAK;IACL,KAAAM,UAAU,GAAVA,UAAU;IACV,KAAAI,YAAY,GAAZA,YAAY;IACZ,KAAAF,iBAAiB,GAAjBA,iBAAiB;IAvF3B,KAAAvB,OAAO,GAAU,CACf;MACEF,IAAI,EAAE,IAAI;MACVa,KAAK,EAAEN,gEAAQ,CAACyB,OAAO;MACvBlC,IAAI,EAAE,SAAS;MACfF,SAAS,EAAE;KACZ,EACD;MACEI,IAAI,EAAE,IAAI;MACVa,KAAK,EAAEN,gEAAQ,CAAC0B,IAAI;MACpBnC,IAAI,EAAE,UAAU;MAChBF,SAAS,EAAE;KACZ,EACD;MACEI,IAAI,EAAE,IAAI;MACVa,KAAK,EAAEN,gEAAQ,CAAC2B,KAAK;MACrBpC,IAAI,EAAE,MAAM;MACZF,SAAS,EAAE;KACZ,EACD;MACEI,IAAI,EAAE,IAAI;MACVa,KAAK,EAAEN,gEAAQ,CAAC4B,KAAK;MACrBrC,IAAI,EAAE,MAAM;MACZF,SAAS,EAAE;KACZ,EACD;MACEI,IAAI,EAAE,IAAI;MACVa,KAAK,EAAEN,gEAAQ,CAAC6B,QAAQ;MACxBtC,IAAI,EAAE,UAAU;MAChBF,SAAS,EAAE;KACZ,CACF;IAED,mBAAa,GACX,qFAAqF;IACvF,4BAAsB,GACpB,iGAAiG;IAEnG,KAAAmC,YAAY,GAGD,IAAI;EA+CZ;EAAC,QAAAvG,CAAA;qBAzFOgF,kBAAkB,EAAAtE,+DAAA,CAAAwB,mDAAA,GAAAxB,+DAAA,CAAAwB,2DAAA,GAAAxB,+DAAA,CAAAqG,qEAAA,GAAArG,+DAAA,CAAAuG,mFAAA,GAAAvG,+DAAA,CAAAyG,0FAAA;EAAA;EAAA,QAAAlH,EAAA;UAAlB+E,kBAAkB;IAAA9E,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA+G,4BAAA7G,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ/BE,4DAAA,iBAAY;QAEVA,qEAAA,MAAsB;QACpBA,4DAAA,kBAA+E;QAAzCA,wDAAA,sBAAA4G,yDAAAC,MAAA;UAAA,OAAY9G,GAAA,CAAAwE,mBAAA,CAAAsC,MAAA,CAA2B;QAAA,EAAC;QAAC7G,0DAAA,EAAW;QAC1FA,4DAAA,aAAuB;QAEdA,oDAAA,oBAAa;QAAAA,0DAAA,EAAM;QACxBA,4DAAA,UAAK;QAACA,oDAAA,GAA4B;QAAAA,0DAAA,EAAM;QACxCA,wDAAA,IAAA8G,iCAAA,iBAEM;QACR9G,0DAAA,EAAM;QACNA,4DAAA,cAAuB;QACrBA,uDAAA,cAAsD;QACxDA,0DAAA,EAAM;QAEVA,mEAAA,EAAe;QAEfA,uDAAA,wBAA0C;QAC5CA,0DAAA,EAAa;;;QAhBSA,uDAAA,GAAmB;QAAnBA,wDAAA,YAAAD,GAAA,CAAAiE,OAAA,CAAmB;QAI3BhE,uDAAA,GAA4B;QAA5BA,gEAAA,MAAAD,GAAA,CAAA8F,YAAA,kBAAA9F,GAAA,CAAA8F,YAAA,CAAAkB,OAAA,MAA4B;QAC5B/G,uDAAA,GAA2B;QAA3BA,wDAAA,SAAAD,GAAA,CAAA8F,YAAA,kBAAA9F,GAAA,CAAA8F,YAAA,CAAAmB,OAAA,CAA2B;QAK5BhH,uDAAA,GAAmB;QAAnBA,wDAAA,QAAAD,GAAA,CAAAkH,WAAA,EAAAjH,2DAAA,CAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZe;AAEY;AACM;AACM;AAEA;AACH;AACd;;AAMhD,MAAOqH,eAAe;EAAA,QAAA/H,CAAA;qBAAf+H,eAAe;EAAA;EAAA,QAAA9H,EAAA;UAAf8H;EAAe;EAAA,QAAAjH,EAAA;cAFhBF,yDAAY,EAAEkH,6EAAsB,EAAED,4EAAc,EAAEhH,gEAAU;EAAA;;;sHAE/DkH,eAAe;IAAAhH,YAAA,GAHXM,gFAAe,EAAEoD,0EAAa,EAAEO,oEAAkB;IAAAhE,OAAA,GACvDJ,yDAAY,EAAEkH,6EAAsB,EAAED,4EAAc,EAAEhH,gEAAU;EAAA;AAAA;;;;;;;;;;;;;;;;;;ACZrB;AAEI;AAEzB;;;AAElC,MAAMoH,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEnD,oEAAkB;EAC7BoD,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,EAAE;IAAEG,UAAU,EAAEtD,4CAAQ,CAACyB,OAAO;IAAE8B,SAAS,EAAE;EAAM,CAAE,EAC7D;IACEJ,IAAI,EAAEnD,4CAAQ,CAACyB,OAAO;IACtB+B,YAAY,EAAEA,CAAA,KACZ,8LAA2C,CAACC,IAAI,CAC7CC,CAAC,IAAKA,CAAC,CAACC,gBAAgB;GAE9B,EACD;IACER,IAAI,EAAEnD,4CAAQ,CAAC2B,KAAK;IACpB6B,YAAY,EAAEA,CAAA,KACZ,4OAA2C,CAACC,IAAI,CAC7CC,CAAC,IAAKA,CAAC,CAACE,gBAAgB;GAE9B,EACD;IACET,IAAI,EAAEnD,4CAAQ,CAAC0B,IAAI;IACnB8B,YAAY,EAAEA,CAAA,KACZ,0LAAyC,CAACC,IAAI,CAC3CC,CAAC,IAAKA,CAAC,CAACG,eAAe;GAE7B,EACD;IACEV,IAAI,EAAEnD,4CAAQ,CAAC4B,KAAK;IACpB4B,YAAY,EAAEA,CAAA,KACZ,8LAA2C,CAACC,IAAI,CAC7CC,CAAC,IAAKA,CAAC,CAACI,gBAAgB;GAE9B,EACD;IACEX,IAAI,EAAEnD,4CAAQ,CAAC6B,QAAQ;IACvB2B,YAAY,EAAEA,CAAA,KACZ,yPAAiD,CAACC,IAAI,CACnDC,CAAC,IAAKA,CAAC,CAACK,mBAAmB;GAEjC;CAEJ,CACF;AAMK,MAAOhB,sBAAsB;EAAA,QAAA9H,CAAA;qBAAtB8H,sBAAsB;EAAA;EAAA,QAAA7H,EAAA;UAAtB6H;EAAsB;EAAA,QAAAhH,EAAA;cAHvBkH,yDAAY,CAACe,QAAQ,CAACd,MAAM,CAAC,EAC7BD,yDAAY;EAAA;;;sHAEXF,sBAAsB;IAAA9G,OAAA,GAAAkB,yDAAA;IAAAjB,OAAA,GAFvB+G,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;ACnCjB,IAAKgB,SASX;AATD,WAAYA,SAAS;EACnB;EACAA,SAAA,qBAAmB;EACnB;EACAA,SAAA,iBAAe;EACf;EACAA,SAAA,qBAAmB;EACnB;EACAA,SAAA,qBAAmB;AACrB,CAAC,EATWA,SAAS,KAATA,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;AESd,IAAKC,SAOX;AAPD,WAAYA,SAAS;EACnBA,SAAA,+BAA2B;EAC3BA,SAAA,mBAAe;EACfA,SAAA,qBAAiB;EACjBA,SAAA,mBAAe;EACfA,SAAA,iBAAa;EACbA,SAAA,mBAAe;AACjB,CAAC,EAPWA,SAAS,KAATA,SAAS;AASd,IAAKC,WAIX;AAJD,WAAYA,WAAW;EACrBA,WAAA,qBAAiB;EACjBA,WAAA,qBAAiB;EACjBA,WAAA,qBAAiB;AACnB,CAAC,EAJWA,WAAW,KAAXA,WAAW;AAchB,IAAKC,eAKX;AALD,WAAYA,eAAe;EACzBA,eAAA,yBAAqB;EACrBA,eAAA,uBAAmB;EACnBA,eAAA,yBAAqB;EACrBA,eAAA,+BAA2B;AAC7B,CAAC,EALWA,eAAe,KAAfA,eAAe;;;;;;;;;;;;;;;;;;;;;ACnDG;AACD;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGFxB,IAAKC,mBAKX;AALD,WAAYA,mBAAmB;EAC7BA,mBAAA,CAAAA,mBAAA,kCAAY;EACZA,mBAAA,CAAAA,mBAAA,sBAAM;EACNA,mBAAA,CAAAA,mBAAA,4BAAS;EACTA,mBAAA,CAAAA,mBAAA,0BAAQ;AACV,CAAC,EALWA,mBAAmB,KAAnBA,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;AEOxB,IAAKrE,QAMX;AAND,WAAYA,QAAQ;EAClBA,QAAA,uBAAmB;EACnBA,QAAA,iBAAa;EACbA,QAAA,mBAAe;EACfA,QAAA,mBAAe;EACfA,QAAA,yBAAqB;AACvB,CAAC,EANWA,QAAQ,KAARA,QAAQ;;;;;;;;;;;;;;;;ACPQ;;;;;;;;;;;;;;;;;;;;;;;ACAM;AACD;;;;;;;;;;;;;;;;;;;;ACCiB;;;;AAS5C,MAAOwE,eAAe;EAC1B,IAAYC,QAAQA,CAAA;IAClB,OAAO,IAAI,CAACC,WAAW,CAACD,QAAQ;EAClC;EAEAE,aAAaA,CAAA;IACX,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,UAAU;IACtC,OAAO,IAAI,CAACI,IAAI,CAACC,GAAG,CAAUF,GAAG,CAAC,CAAC7H,IAAI,CACrCuH,gDAAU,CAAES,KAAwB,IAAI;MACtCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,EAAE;IACX,CAAC,CAAC,CACH;EACH;EAEAG,eAAeA,CAAA;IACb,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,oBAAoB;IAChD,OAAO,IAAI,CAACI,IAAI,CAACC,GAAG,CAAiBF,GAAG,CAAC;EAC3C;EAEAO,QAAQA,CAACC,SAAiB,EAAEC,UAAkB;IAC5C,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,YAAYY,UAAU,EAAE;IACpD,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAOV,GAAG,EAAE;MAAEnF,IAAI,EAAE2F;IAAS,CAAE,CAAC,CAACrI,IAAI,CACvDuH,gDAAU,CAAES,KAAwB,IAAI;MACtCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAOR,wCAAE,CAACgB,SAAS,CAAC;IACtB,CAAC,CAAC,CACH;EACH;EAEAC,WAAWA,CAAA;IACT,MAAMZ,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,UAAU;IACtC,OAAO,IAAI,CAACI,IAAI,CAACC,GAAG,CAASF,GAAG,CAAC;EACnC;EAEAa,SAASA,CAACC,IAAqB;IAC7B,MAAMd,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,UAAU;IACtC,OAAO,IAAI,CAACI,IAAI,CAACS,GAAG,CAAOV,GAAG,EAAEc,IAAI,CAAC,CAAC3I,IAAI,CACxCuH,gDAAU,CAAES,KAAwB,IAAI;MACtCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAOR,wCAAE,CAACgB,SAAS,CAAC;IACtB,CAAC,CAAC,CACH;EACH;EAEAI,WAAWA,CAACD,IAAqB;IAC/B,MAAMd,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,UAAU;IACtC,OAAO,IAAI,CAACI,IAAI,CAACe,KAAK,CAAOhB,GAAG,EAAEc,IAAI,CAAC,CAAC3I,IAAI,CAC1CuH,gDAAU,CAAES,KAAwB,IAAI;MACtCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAOR,wCAAE,CAACgB,SAAS,CAAC;IACtB,CAAC,CAAC,CACH;EACH;EAEAM,UAAUA,CAAA;IACR,MAAMjB,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,QAAQ;IACpCO,OAAO,CAACC,GAAG,CACT,wFAAwF,EACxF,IAAI,CAACR,QAAQ,CACd;IACDO,OAAO,CAACC,GAAG,CACT,8EAA8E,EAC9EL,GAAG,CACJ;IACD,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAQF,GAAG,CAAC;EAClC;EAEAkB,YAAYA,CAAA;IACV,MAAMlB,GAAG,GAAG,GAAG,IAAI,CAACH,QAAQ,UAAU;IACtC,OAAO,IAAI,CAACI,IAAI,CAACC,GAAG,CAGjBF,GAAG,CAAC;EACT;EAEApI,YAAoBqI,IAAgB,EAAUH,WAAwB;IAAlD,KAAAG,IAAI,GAAJA,IAAI;IAAsB,KAAAH,WAAW,GAAXA,WAAW;EAAgB;EAAC,QAAAzJ,CAAA;qBA5E/DuJ,eAAe,EAAA7I,sDAAA,CAAAwB,4DAAA,GAAAxB,sDAAA,CAAAqG,sDAAA;EAAA;EAAA,QAAA9G,EAAA;WAAfsJ,eAAe;IAAA0B,OAAA,EAAf1B,eAAe,CAAA2B,IAAA;IAAAC,UAAA,EAFd;EAAM;;;;;;;;;;;;;;;;;ACFd,MAAOH,WAAW;EACtB,IAAII,qBAAqBA,CAAA;IACvB,MAAMC,eAAe,GAAG,WAAW;IACnC,MAAMC,WAAW,GAAG,MAAM;IAC1B,IAAIC,cAAkC;IACtC,IAAIC,UAA8B;IAClC,IAAIC,SAA6B;IACjC,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACpD,IAAIF,YAAY,EAAE;MAChB,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;MAC9C,MAAMM,eAAe,GAAGH,aAAa,CAAC,iBAAiB,CAAC,IAAI,EAAE;MAC9DN,cAAc,GAAGS,eAAe,CAAC,UAAU,CAAC,IAAIX,eAAe;MAC/DG,UAAU,GAAGQ,eAAe,CAAC,MAAM,CAAC,IAAIV,WAAW;MACnDG,SAAS,GAAGO,eAAe,CAAC,KAAK,CAAC;;IAEpC,OAAO;MACLxC,QAAQ,EAAE+B,cAAc,IAAIF,eAAe;MAC3CY,IAAI,EAAET,UAAU,IAAIF,WAAW;MAC/BY,GAAG,EAAET,SAAS,IAAI;KACnB;EACH;EAEA,IAAIL,qBAAqBA,CAACY,eAA6C;IACrE,IAAI,KAAI,EAAE;IAGV,MAAMN,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI;IAC5D,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;IAC9CG,aAAa,CAAC,iBAAiB,CAAC,GAAGG,eAAe;IAClDL,YAAY,CAACQ,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACM,SAAS,CAACP,aAAa,CAAC,CAAC;EAChE;EAEA,IAAIQ,IAAIA,CAAA;IACN,OAAO,IAAI,CAACjB,qBAAqB,CAAC5B,QAAQ;EAC5C;EAEA,IAAIyC,IAAIA,CAAA;IACN,OAAO,IAAI,CAACb,qBAAqB,CAACa,IAAI;EACxC;EAEA,IAAIzC,QAAQA,CAAA;IACV,OAAO,UAAU,IAAI,CAAC6C,IAAI,IAAI,IAAI,CAACJ,IAAI,EAAE;EAC3C;EAEA1K,YAAA,GAAe;EAAC,QAAAvB,CAAA;qBA5CLgL,WAAW;EAAA;EAAA,QAAA/K,EAAA;WAAX+K,WAAW;IAAAC,OAAA,EAAXD,WAAW,CAAAE,IAAA;IAAAC,UAAA,EAFV;EAAM;;;;;;;;;;;;;;;;;ACAd,MAAOmB,iBAAiB;EAC5B/K,YAAA,GAAe;EAEfqK,OAAOA,CAACW,IAAY;IAClB,OACEC,kBAAkB,CAChBC,QAAQ,CAACC,MAAM,CAACC,OAAO,CACrB,IAAIC,MAAM,CACR,kBAAkB,GAChBC,kBAAkB,CAACN,IAAI,CAAC,CAACI,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,GACnD,6BAA6B,CAChC,EACD,IAAI,CACL,CACF,IAAI,IAAI;EAEb;EAEAR,OAAOA,CACLI,IAAY,EACZO,MAAc,EACdC,IAA6B,EAC7BC,KAAc,EACdC,OAAgB,EAChBC,OAAgB;IAEhB,IAAI,CAACX,IAAI,IAAI,4CAA4C,CAACY,IAAI,CAACZ,IAAI,CAAC,EAAE;MACpE,OAAO,KAAK;;IAEd,IAAIa,QAAQ,GAAG,EAAE;IACjB,IAAIL,IAAI,EAAE;MACR,QAAQA,IAAI,CAACxL,WAAW;QACtB,KAAK8L,MAAM;UACTD,QAAQ,GACNL,IAAI,KAAKO,QAAQ,GACb,yCAAyC,GACzC,YAAY,GAAGP,IAAI;UACzB;QACF,KAAKQ,MAAM;UACTH,QAAQ,GAAG,YAAY,GAAGL,IAAI;UAC9B;QACF,KAAKS,IAAI;UACPJ,QAAQ,GAAG,YAAY,GAAIL,IAAa,CAACU,WAAW,EAAE;UACtD;;;IAGNhB,QAAQ,CAACC,MAAM,GACbG,kBAAkB,CAACN,IAAI,CAAC,GACxB,GAAG,GACHM,kBAAkB,CAACC,MAAM,CAAC,GAC1BM,QAAQ,IACPH,OAAO,GAAG,WAAW,GAAGA,OAAO,GAAG,EAAE,CAAC,IACrCD,KAAK,GAAG,SAAS,GAAGA,KAAK,GAAG,EAAE,CAAC,IAC/BE,OAAO,GAAG,UAAU,GAAG,EAAE,CAAC;IAC7B,OAAO,IAAI;EACb;EAEAQ,UAAUA,CAACnB,IAAY,EAAES,KAAa,EAAEC,OAAe;IACrD,IAAI,CAACV,IAAI,IAAI,CAAC,IAAI,CAACoB,OAAO,CAACpB,IAAI,CAAC,EAAE;MAChC,OAAO,KAAK;;IAEdE,QAAQ,CAACC,MAAM,GACbG,kBAAkB,CAACN,IAAI,CAAC,GACxB,0CAA0C,IACzCU,OAAO,GAAG,WAAW,GAAGA,OAAO,GAAG,EAAE,CAAC,IACrCD,KAAK,GAAG,SAAS,GAAGA,KAAK,GAAG,EAAE,CAAC;IAClC,OAAO,IAAI;EACb;EAEAW,OAAOA,CAACpB,IAAY;IAClB,OAAO,IAAIK,MAAM,CACf,aAAa,GACXC,kBAAkB,CAACN,IAAI,CAAC,CAACI,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,GACnD,SAAS,CACZ,CAACQ,IAAI,CAACV,QAAQ,CAACC,MAAM,CAAC;EACzB;EAAC,QAAA1M,CAAA;qBA3EUsM,iBAAiB;EAAA;EAAA,QAAArM,EAAA;WAAjBqM,iBAAiB;IAAArB,OAAA,EAAjBqB,iBAAiB,CAAApB,IAAA;IAAAC,UAAA,EAFhB;EAAM;;;;;;;;;;;;;;;;;;ACH8B;;;;;;;;;;;;;;;;;;;ACEI;;;AAMhD,MAAOjE,YAAY;EAWvB4G,aAAaA,CAAA;IACX,IAAI,CAACC,sBAAsB,CAACC,IAAI,CAAC,YAAY,CAAC;EAChD;EAEAnD,YAAYA,CAAA,GAAI;EAEhBtJ,YAAoB0M,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAhB3B,KAAAF,sBAAsB,GAAG,IAAIH,yCAAO,EAAU;IAEtD,KAAAM,gBAAgB,GAAuB,IAAI,CAACH,sBAAsB,CAACjM,IAAI,CACrE+L,+CAAS,CAAC,MAAK;MACb,OAAO,IAAI,CAACI,eAAe,CAAC1D,WAAW,EAAE;IAC3C,CAAC,CAAC,CACH;IAED,KAAAnE,aAAa,GAAG,IAAI,CAAC6H,eAAe,CAACpD,YAAY,EAAE;EAQI;EAAC,QAAA7K,CAAA;qBAjB7CkH,YAAY,EAAAxG,sDAAA,CAAAwB,mEAAA;EAAA;EAAA,QAAAjC,EAAA;WAAZiH,YAAY;IAAA+D,OAAA,EAAZ/D,YAAY,CAAAgE,IAAA;IAAAC,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;ACNyB;AAEvC,MAAOgD,gBAAgB;EAkD3B5M,YAAY6M,QAMX;IApDD,KAAAC,SAAS,GAAG,MAAc;MACxB,MAAMC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAI,CAACA,QAAQ,EAAE;QACb,OAAO,KAAK;;MAEd,IACEA,QAAQ,CAACC,UAAU,KAAKnF,uDAAmB,CAACoF,UAAU,IACtDF,QAAQ,CAACC,UAAU,KAAKnF,uDAAmB,CAACqF,IAAI,EAChD;QACA,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,KAAK;;IAEhB,CAAC;IACD;IACA,KAAAC,OAAO,GAAG,MAAK;MACb,MAAMJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAI,CAACA,QAAQ,IAAI,CAAC,IAAI,CAACD,SAAS,EAAE;QAChC;;MAEFC,QAAQ,CAACK,KAAK,EAAE;MAChB,IAAI,CAACL,QAAQ,GAAG,IAAI;IACtB,CAAC;IACD;IACA,KAAAM,MAAM,GAAIC,EAAS,IAAS;MAC1B9E,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B;IACF,CAAC;IACD;IACA,KAAA8E,OAAO,GAAID,EAAS,IAAS;MAC3B9E,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B;IACF,CAAC;;IAED,KAAA+E,SAAS,GAAIzI,IAAS,IAAI,CAAE,CAAC;IAE7B,KAAA0I,OAAO,GAAIlF,KAAU,IAAI;MACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC;IACD;IACA,KAAAmF,IAAI,GAAI3I,IAAS,IAAI;MACnB,IAAI,CAAC,IAAI,CAACgI,QAAQ,EAAE;QAClB;;MAEF,IAAI,CAACA,QAAQ,CAACW,IAAI,CAACnD,IAAI,CAACM,SAAS,CAAC9F,IAAI,CAAC,CAAC;IAC1C,CAAC;IAQC,MAAM;MAAEqD,GAAG;MAAEiF,MAAM;MAAEI,OAAO;MAAEF,OAAO;MAAEC;IAAS,CAAE,GAAGX,QAAQ;IAC7D,IAAI,CAACE,QAAQ,GAAG,IAAIY,SAAS,CAACvF,GAAG,CAAC;IAClC,IAAI,CAAC2E,QAAQ,CAACM,MAAM,GAAGA,MAAM,IAAI,IAAI,CAACA,MAAM;IAC5C,IAAI,CAACN,QAAQ,CAACU,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO;IAC/C,IAAI,CAACV,QAAQ,CAACQ,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO;IAC/C,IAAI,CAACR,QAAQ,CAACS,SAAS,GAAGA,SAAS,IAAI,IAAI,CAACA,SAAS;EACvD;;;;;;;;;;;;;;;;;;;AChE8C;AAEL;;;AAOrC,MAAO3H,iBAAiB;EAI5BlB,cAAcA,CAAA;IACZ,IAAI,CAACiJ,WAAW,CAAC9I,SAAS,CAAEC,IAAI,IAAI;MAClC,IAAI,CAAC8I,cAAc,GAAG9I,IAAI;IAC5B,CAAC,CAAC;EACJ;EAEA/E,YAAoBkI,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IATvB,KAAA0F,WAAW,GAAG,IAAIvB,yCAAO,EAAY;IAC7C,KAAAwB,cAAc,GAAoB,IAAI;IASpC,MAAM/C,IAAI,GAAG,IAAI,CAAC5C,WAAW,CAAC4C,IAAI;IAClC,MAAMJ,IAAI,GAAG,IAAI,CAACxC,WAAW,CAACwC,IAAI;IAElC,MAAMoD,aAAa,GAAG,QAAQhD,IAAI,IAAIJ,IAAI,cAAc;IACxD,MAAMqD,YAAY,GAAG,IAAInB,mDAAgB,CAAC;MACxCxE,GAAG,EAAE0F,aAAa;MAClBN,SAAS,EAAGQ,KAAK,IAAI;QACnB,IAAIjJ,IAAI,GAAG,IAAI;QACf,IAAI;UACFA,IAAI,GAAGwF,IAAI,CAACC,KAAK,CAACwD,KAAK,CAACjJ,IAAI,CAAa;SAC1C,CAAC,OAAOwD,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;;QAEpB,IAAIxD,IAAI,EAAE;UACR,IAAI,CAAC6I,WAAW,CAACnB,IAAI,CAAC1H,IAAI,CAAC;;MAE/B;KACD,CAAC;IACFgJ,YAAY,CAACjB,SAAS,EAAE;EAC1B;EAAC,QAAArO,CAAA;qBA9BUoH,iBAAiB,EAAA1G,sDAAA,CAAAwB,0DAAA;EAAA;EAAA,QAAAjC,EAAA;WAAjBmH,iBAAiB;IAAA6D,OAAA,EAAjB7D,iBAAiB,CAAA8D,IAAA;IAAAC,UAAA,EAFhB;EAAM;;;;;;;;;;;;;;;;;;;;;;;ACPsC;AACa;;;AAIvE,IAAKsE,MAKJ;AALD,WAAKA,MAAM;EACTA,MAAA,CAAAA,MAAA,wBAAO;EACPA,MAAA,CAAAA,MAAA,sBAAM;EACNA,MAAA,CAAAA,MAAA,sBAAM;EACNA,MAAA,CAAAA,MAAA,wBAAO;AACT,CAAC,EALIA,MAAM,KAANA,MAAM;AAOX,MAAMC,OAAO,GAAGA,CAAA,KACdF,0CAAI,CAAC,CAACG,WAAkB,EAAEC,IAAS,KAAI;EACrCD,WAAW,CAACE,OAAO,CAACD,IAAI,CAAC;EACzB,OAAOD,WAAW;AACpB,CAAC,EAAE,EAAE,CAAC;AAKF,MAAO3I,UAAU;EAWrBhB,OAAOA,CAAA;IACL,IAAI,CAAC8J,MAAM,CACRhO,IAAI,CACHZ,yCAAG,CAAE8I,GAAG,IAAK8B,IAAI,CAACC,KAAK,CAAC/B,GAAG,CAAQ,CAAC,EACpC9I,yCAAG,CAAE8I,GAAG,KAAM;MAAE,GAAGA,GAAG;MAAE+F,IAAI,EAAE,IAAIvC,IAAI;IAAE,CAAE,CAAC,CAAC,EAC5CkC,OAAO,EAAE,EACTrG,gDAAU,CAAC,MAAK;MACd,OAAOC,wCAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH,CACAjD,SAAS,CAAE2D,GAAG,IAAI;MACjB,IAAI,CAACgG,QAAQ,GAAGhG,GAAG;IACrB,CAAC,CAAC;IAEJ,IAAI,CAACiG,KAAK,CACPnO,IAAI,CACHZ,yCAAG,CAAE8I,GAAG,IAAK8B,IAAI,CAACC,KAAK,CAAC/B,GAAG,CAAQ,CAAC,EACpC9I,yCAAG,CAAE8I,GAAG,KAAM;MAAE,GAAGA,GAAG;MAAE+F,IAAI,EAAE,IAAIvC,IAAI;IAAE,CAAE,CAAC,CAAC,EAC5CkC,OAAO,EAAE,EACTrG,gDAAU,CAAC,MAAK;MACd,OAAOC,wCAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH,CACAjD,SAAS,CAAE2D,GAAG,IAAI;MACjB,IAAI,CAACkG,OAAO,GAAGlG,GAAG;IACpB,CAAC,CAAC;IAEJ,IAAI,CAACmG,KAAK,CACPrO,IAAI,CACHZ,yCAAG,CAAE8I,GAAG,IAAK8B,IAAI,CAACC,KAAK,CAAC/B,GAAG,CAAQ,CAAC,EACpC9I,yCAAG,CAAE8I,GAAG,KAAM;MAAE,GAAGA,GAAG;MAAE+F,IAAI,EAAE,IAAIvC,IAAI;IAAE,CAAE,CAAC,CAAC,EAC5CkC,OAAO,EAAE,EACTrG,gDAAU,CAAC,MAAK;MACd,OAAOC,wCAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH,CACAjD,SAAS,CAAE2D,GAAG,IAAI;MACjB,IAAI,CAACoG,OAAO,GAAGpG,GAAG;IACpB,CAAC,CAAC;IAEJ,IAAI,CAACqG,MAAM,CACRvO,IAAI,CACHZ,yCAAG,CAAE8I,GAAG,IAAK8B,IAAI,CAACC,KAAK,CAAC/B,GAAG,CAAQ,CAAC,EACpC9I,yCAAG,CAAE8I,GAAG,KAAM;MAAE,GAAGA,GAAG;MAAE+F,IAAI,EAAE,IAAIvC,IAAI;IAAE,CAAE,CAAC,CAAC,EAC5CkC,OAAO,EAAE,EACTrG,gDAAU,CAAC,MAAK;MACd,OAAOC,wCAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH,CACAjD,SAAS,CAAE2D,GAAG,IAAI;MACjB,IAAI,CAACsG,QAAQ,GAAGtG,GAAG;IACrB,CAAC,CAAC;EACN;EAEAzI,YAAoBkI,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAhEvB,KAAAqG,MAAM,GAAG,IAAIlC,yCAAO,EAAU;IAC9B,KAAAqC,KAAK,GAAG,IAAIrC,yCAAO,EAAU;IAC7B,KAAAuC,KAAK,GAAG,IAAIvC,yCAAO,EAAU;IAC7B,KAAAyC,MAAM,GAAG,IAAIzC,yCAAO,EAAU;IAE/B,KAAAoC,QAAQ,GAAU,EAAE;IACpB,KAAAE,OAAO,GAAU,EAAE;IACnB,KAAAE,OAAO,GAAU,EAAE;IACnB,KAAAE,QAAQ,GAAU,EAAE;IAyDzB,MAAMjE,IAAI,GAAG,IAAI,CAAC5C,WAAW,CAAC4C,IAAI;IAClC,MAAMJ,IAAI,GAAG,IAAI,CAACxC,WAAW,CAACwC,IAAI;IAElC,MAAMsE,OAAO,GAAG,QAAQlE,IAAI,IAAIJ,IAAI,kBAAkB;IACtD,MAAMuE,OAAO,GAAG,QAAQnE,IAAI,IAAIJ,IAAI,kBAAkB;IACtD,MAAMwE,QAAQ,GAAG,QAAQpE,IAAI,IAAIJ,IAAI,mBAAmB;IACxD,MAAMyE,QAAQ,GAAG,QAAQrE,IAAI,IAAIJ,IAAI,mBAAmB;IAExD,MAAM0E,OAAO,GAAG,IAAIxC,+EAAgB,CAAC;MACnCxE,GAAG,EAAE8G,QAAQ;MACb1B,SAAS,EAAGQ,KAAK,IAAI;QACnB,IAAI,CAACO,MAAM,CAAC9B,IAAI,CAACuB,KAAK,CAACjJ,IAAI,CAAC;MAC9B;KACD,CAAC;IACF,MAAMsK,MAAM,GAAG,IAAIzC,+EAAgB,CAAC;MAClCxE,GAAG,EAAE4G,OAAO;MACZxB,SAAS,EAAGQ,KAAK,IAAI;QACnB,IAAI,CAACU,KAAK,CAACjC,IAAI,CAACuB,KAAK,CAACjJ,IAAI,CAAC;MAC7B;KACD,CAAC;IACF,MAAMuK,MAAM,GAAG,IAAI1C,+EAAgB,CAAC;MAClCxE,GAAG,EAAE6G,OAAO;MACZzB,SAAS,EAAGQ,KAAK,IAAI;QACnB,IAAI,CAACY,KAAK,CAACnC,IAAI,CAACuB,KAAK,CAACjJ,IAAI,CAAC;MAC7B;KACD,CAAC;IACF,MAAMwK,UAAU,GAAG,IAAI3C,+EAAgB,CAAC;MACtCxE,GAAG,EAAE+G,QAAQ;MACb3B,SAAS,EAAGQ,KAAK,IAAI;QACnB,IAAI,CAACc,MAAM,CAACrC,IAAI,CAACuB,KAAK,CAACjJ,IAAI,CAAC;MAC9B;KACD,CAAC;IAEFqK,OAAO,CAACtC,SAAS,EAAE;IACnBuC,MAAM,CAACvC,SAAS,EAAE;IAClBwC,MAAM,CAACxC,SAAS,EAAE;IAClByC,UAAU,CAACzC,SAAS,EAAE;EACxB;EAAC,QAAArO,CAAA;qBAvGUgH,UAAU,EAAAtG,sDAAA,CAAAwB,0DAAA;EAAA;EAAA,QAAAjC,EAAA;WAAV+G,UAAU;IAAAiE,OAAA,EAAVjE,UAAU,CAAAkE,IAAA;IAAAC,UAAA,EAFT;EAAM","sources":["./src/app/core/components/loading/loading.component.ts","./src/app/core/components/loading/loading.component.html","./src/app/core/core.module.ts","./src/app/features/dashboard/components/layout/layout.component.ts","./src/app/features/dashboard/components/layout/layout.component.html","./src/app/features/dashboard/components/menu/menu.component.ts","./src/app/features/dashboard/components/menu/menu.component.html","./src/app/features/dashboard/dashboard.component.ts","./src/app/features/dashboard/dashboard.component.html","./src/app/features/dashboard/dashboard.module.ts","./src/app/features/dashboard/dashboard.routing.module.ts","./src/app/models/api/config.model.ts","./src/app/models/api/connection.model.ts","./src/app/models/api/proxy.model.ts","./src/app/models/api/public_api.ts","./src/app/models/api/rule.model.ts","./src/app/models/core/public_api.ts","./src/app/models/core/websocket.model.ts","./src/app/models/feature/log.model.ts","./src/app/models/feature/menu.model.ts","./src/app/models/feature/public_api.ts","./src/app/models/public_api.ts","./src/app/services/api/clash-api.service.ts","./src/app/services/api/host.service.ts","./src/app/services/core/doc-cookies/doc-cookies.service.ts","./src/app/services/core/index.ts","./src/app/services/core/store/store.service.ts","./src/app/services/core/websocket/websocket.service.ts","./src/app/services/feature/connection.service.ts","./src/app/services/feature/log.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent {\n\n}\n","<div class=\"box\"></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingComponent } from './components/loading/loading.component';\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [CommonModule],\n  exports: [LoadingComponent],\n})\nexport class CoreModule {}\n","import { Component, OnInit, Self } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { Nav, NavValue } from '@model';\nimport { LogService } from 'src/app/services/feature/log.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  title = 'ng-clash';\n  showSideNav = false;\n  activatedMenu?: Nav;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  ngOnInit(): void {}\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n    <div class=\"sidenav-content\">\n      <mat-toolbar>\n        <app-loading></app-loading>\n        <div>Menu</div>\n      </mat-toolbar>\n      <ng-content select=\"[AppMenu]\"></ng-content>\n      <ng-content select=\"[AppExtra]\"></ng-content>\n    </div>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\" class=\"toolbar\">\n      <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\n        <!-- *ngIf=\"isHandset$ | async\"> -->\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Ng-Clash</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div class=\"content\">\n      <ng-content select=\"[AppContent]\"></ng-content>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {\n  Input,\n  Output,\n  Component,\n  ViewChild,\n  EventEmitter,\n} from '@angular/core';\nimport { MatSelectionList } from '@angular/material/list';\nimport { Nav } from '@model';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent {\n  @ViewChild(MatSelectionList)\n  matSelectionList!: MatSelectionList;\n\n  @Input()\n  navList: Nav[] = [];\n\n  @Output()\n  onChange = new EventEmitter<Nav>();\n}\n","<mat-nav-list>\n  <ng-container *ngFor=\"let nav of navList;let i = index;last as last\">\n    <mat-list-item [activated]=\"nav.activated\" (click)=\"onChange.emit(nav)\">\n      <mat-icon matListItemIcon>{{ nav.icon }}</mat-icon>\n      <span matListItemTitle>\n        {{nav.name}}\n      </span>\n    </mat-list-item>\n    <!-- <mat-divider *ngIf=\"!last\"></mat-divider> -->\n  </ng-container>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\nimport { Nav, NavValue } from '../../models/feature/menu.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogService } from '../../services/feature/log.service';\nimport { ConnectionService } from 'src/app/services/feature/connection.service';\nimport { StoreService } from 'src/app/services/core/store/store.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  navList: Nav[] = [\n    {\n      name: '代理',\n      value: NavValue.proxies,\n      icon: 'vpn_key',\n      activated: true,\n    },\n    {\n      name: '日志',\n      value: NavValue.logs,\n      icon: 'terminal',\n      activated: false,\n    },\n    {\n      name: '规则',\n      value: NavValue.rules,\n      icon: 'rule',\n      activated: false,\n    },\n    {\n      name: '连接',\n      value: NavValue.links,\n      icon: 'link',\n      activated: false,\n    },\n    {\n      name: '设置',\n      value: NavValue.settings,\n      icon: 'settings',\n      activated: false,\n    },\n  ];\n\n  'githubPages' =\n    'https://github.com/teddingdev/ng-clash/actions/workflows/github-pages.yml/badge.svg';\n  'pagesBuildDeployment' =\n    'https://github.com/teddingdev/ng-clash/actions/workflows/pages/pages-build-deployment/badge.svg';\n\n  clashVersion: {\n    premium: boolean;\n    version: string;\n  } | null = null;\n\n  handleSideNavActive(menu: Nav) {\n    this.navList = this.toggleSideNavActiveStatus(\n      this.navList,\n      (menuItem) => menuItem.value === menu.value\n    );\n    this.router.navigate([menu.value], {\n      relativeTo: this.route,\n    });\n  }\n\n  /** toggle sideNav highlight */\n  toggleSideNavActiveStatus(\n    menuList: Nav[],\n    compareFn: (menuItem: Nav) => boolean\n  ) {\n    return menuList.map((menuItem) => {\n      if (compareFn(menuItem)) {\n        menuItem.activated = true;\n      } else {\n        menuItem.activated = false;\n      }\n      return menuItem;\n    });\n  }\n\n  ngOnInit(): void {\n    this.navList = this.toggleSideNavActiveStatus(this.navList, (menuItem) =>\n      location.pathname.includes(menuItem.value)\n    );\n\n    // todo 获取日志\n    this.logService.initLog();\n    this.connectionService.initConnection();\n    // 获取版本号\n    this.storeService.clashVersion$.subscribe(\n      (data) => (this.clashVersion = data)\n    );\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private storeService: StoreService,\n    private connectionService: ConnectionService\n  ) {}\n}\n","<app-layout>\n  <!-- 菜单 -->\n  <ng-container AppMenu>\n    <app-menu AppMenu [navList]=\"navList\" (onChange)=\"handleSideNavActive($event)\"></app-menu>\n    <div class=\"app-extra\">\n      <div class=\"version\">\n        <div>CLASH VERSION</div>\n        <div> {{ clashVersion?.version }} </div>\n        <div *ngIf=\"clashVersion?.premium\">\n          <mat-chip [highlighted]=\"true\">Premium</mat-chip>\n        </div>\n      </div>\n      <div class=\"CI-status\">\n        <img [src]=\"githubPages\" alt=\"github-pages-badge.svg\">\n      </div>\n    </div>\n  </ng-container>\n  <!-- APP -->\n  <router-outlet AppContent></router-outlet>\n</app-layout>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { LayoutComponent } from './components/layout/layout.component';\n\nimport { MaterialModule } from '../../shared/material/material.module';\nimport { DashboardRoutingModule } from './dashboard.routing.module';\nimport { CoreModule } from 'src/app/core/core.module';\n\n@NgModule({\n  declarations: [LayoutComponent, MenuComponent, DashboardComponent],\n  imports: [CommonModule, DashboardRoutingModule, MaterialModule, CoreModule],\n})\nexport class DashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nimport { NavValue } from '@model';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      { path: '', redirectTo: NavValue.proxies, pathMatch: 'full' },\n      {\n        path: NavValue.proxies,\n        loadChildren: () =>\n          import('../clash-proxy/clash-proxy.module').then(\n            (m) => m.ClashProxyModule\n          ),\n      },\n      {\n        path: NavValue.rules,\n        loadChildren: () =>\n          import('../clash-rules/clash-rules.module').then(\n            (m) => m.ClashRulesModule\n          ),\n      },\n      {\n        path: NavValue.logs,\n        loadChildren: () =>\n          import('../clash-logs/clash-logs.module').then(\n            (m) => m.ClashLogsModule\n          ),\n      },\n      {\n        path: NavValue.links,\n        loadChildren: () =>\n          import('../clash-links/clash-links.module').then(\n            (m) => m.ClashLinksModule\n          ),\n      },\n      {\n        path: NavValue.settings,\n        loadChildren: () =>\n          import('../clash-settings/clash-settings.module').then(\n            (m) => m.ClashSettingsModule\n          ),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","export interface Config {\n  port: number;\n  'socks-port': number;\n  'redir-port': number;\n  'tproxy-port': number;\n  'mixed-port': number;\n  'allow-lan': boolean;\n  'bind-address': string;\n  mode: keyof typeof ClashMode;\n  'log-level': string;\n  ipv6: boolean;\n}\n\nexport interface ExternalControlConfig {\n  hostname: string;\n  port: string;\n  key: string;\n}\n\nexport enum ClashMode {\n  /** 全局 */\n  'global' = 'Global',\n  /** 规则 */\n  'rule' = 'Rule',\n  /** 脚本 */\n  'script' = 'Script',\n  /** 直连 */\n  'direct' = 'Direct',\n}\n","export interface Snapshot {\n  uploadTotal: number\n  downloadTotal: number\n  connections: Connections[]\n}\n\nexport interface Connections {\n  id: string\n  metadata: {\n      network: string\n      type: string\n      host: string\n      processPath?: string\n      sourceIP: string\n      sourcePort: string\n      destinationPort: string\n      destinationIP?: string\n  }\n  upload: number\n  download: number\n  start: string\n  chains: string[]\n  rule: string\n  rulePayload: string\n}\n","export interface Proxy {\n  name: string;\n  type: ProxyType | UnUsedProxy;\n  history: History[];\n  udp: boolean;\n}\n\nexport interface Proxies {\n  proxies: Record<string, Proxy | PolicyGroup>;\n}\n\nexport interface ProxiesProvider {\n  name: string;\n  proxies: Array<PolicyGroup | Proxy>;\n  type: 'Proxy';\n  vehicleType: 'HTTP' | 'File' | 'Compatible';\n  updatedAt?: string;\n}\n\nexport interface ProxyProviders {\n  providers: Record<string, ProxiesProvider>;\n}\n\ninterface History {\n  time: string;\n  delay: number;\n}\n\nexport enum ProxyType {\n  Shadowsocks = 'Shadowsocks',\n  Vmess = 'Vmess',\n  Trojan = 'Trojan',\n  Socks = 'Socks',\n  Http = 'Http',\n  Snell = 'Snell',\n}\n\nexport enum UnUsedProxy {\n  Direct = 'Direct',\n  Reject = 'Reject',\n  GLOBAL = 'GLOBAL',\n}\n\nexport interface PolicyGroup {\n  name: string;\n  type: PolicyGroupType;\n  history: History[];\n  all: string[];\n  now: string;\n}\n\nexport enum PolicyGroupType {\n  Selector = 'Selector',\n  URLTest = 'URLTest',\n  Fallback = 'Fallback',\n  LoadBalance = 'LoadBalance',\n}\n\nexport type ProxyGroup = SelectProxyGroup &\n  UrlTestProxyGroup &\n  FallbackProxyGroup &\n  LoadBalanceGroup;\n\nexport interface SelectProxyGroup {\n  name?: string;\n\n  type?: 'select';\n\n  proxies?: string[]; // proxy names\n}\n\nexport interface LoadBalanceGroup {\n  name?: string;\n\n  type?: 'load-balance';\n\n  proxies?: string[]; // proxy names\n}\n\nexport interface FallbackProxyGroup {\n  name?: string;\n\n  type?: 'fallback';\n\n  proxies?: string[]; // proxy names\n\n  url?: string;\n\n  interval?: number; // second\n}\n\nexport interface UrlTestProxyGroup {\n  name?: string;\n\n  type?: 'url-test';\n\n  proxies?: string[]; // proxy names\n\n  url?: string;\n\n  interval?: number; // second\n}\n","export * from './proxy.model';\nexport * from './rule.model';\nexport * from './config.model';\nexport * from './connection.model';\n","export interface Rule {\n  type: string;\n  payload: string;\n  proxy: string;\n}\n\nexport interface Rules {\n  rules: Rule[];\n}\n\nexport interface RuleProvider {\n  name: string;\n  type: 'Rule';\n  vehicleType: 'HTTP' | 'File';\n  behavior: string;\n  ruleCount: number;\n  updatedAt?: string;\n}\n","export * from './websocket.model'\n","export enum WebSocketReadyState {\n  'CONNECTING',\n  'OPEN',\n  'CLOSING',\n  'CLOSED',\n}\n","export interface Log {\n  type: string\n  payload: string\n  time: Date\n}\n","export interface Nav {\n  name: string;\n  value: NavValue;\n  icon: string;\n  activated: boolean;\n}\n\nexport enum NavValue {\n  proxies = 'proxies',\n  logs = 'logs',\n  rules = 'rules',\n  links = 'links',\n  settings = 'settings',\n}\n","export * from './log.model';\nexport * from './menu.model';\n","export * from './core/public_api';\nexport * from './api/public_api';\nexport * from './feature/public_api';\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, catchError, of } from 'rxjs';\n\nimport { HostService } from './host.service';\n\nimport { Config, Proxies, ProxyProviders, Rules } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClashApiService {\n  private get hostname() {\n    return this.hostService.hostname;\n  }\n\n  fetchProxyMap() {\n    const url = `${this.hostname}/proxies`;\n    return this.http.get<Proxies>(url).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return [];\n      })\n    );\n  }\n\n  fetchProvideMap() {\n    const url = `${this.hostname}/providers/proxies`;\n    return this.http.get<ProxyProviders>(url);\n  }\n\n  putProxy(proxyName: string, policyName: string) {\n    const url = `${this.hostname}/proxies/${policyName}`;\n    return this.http.put<null>(url, { name: proxyName }).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  fetchConfig() {\n    const url = `${this.hostname}/configs`;\n    return this.http.get<Config>(url);\n  }\n\n  putConfig(body: Partial<Config>) {\n    const url = `${this.hostname}/configs`;\n    return this.http.put<null>(url, body).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  patchConfig(body: Partial<Config>) {\n    const url = `${this.hostname}/configs`;\n    return this.http.patch<null>(url, body).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  fetchRules() {\n    const url = `${this.hostname}/rules`;\n    console.log(\n      `🍅 -> file: clash-api.service.ts:58 -> ClashApiService -> fetchRules -> this.hostname:`,\n      this.hostname\n    );\n    console.log(\n      `🍅 -> file: clash-api.service.ts:58 -> ClashApiService -> fetchRules -> url:`,\n      url\n    );\n    return this.http.get<Rules>(url);\n  }\n\n  fetchVersion() {\n    const url = `${this.hostname}/version`;\n    return this.http.get<{\n      premium: boolean;\n      version: string;\n    }>(url);\n  }\n\n  constructor(private http: HttpClient, private hostService: HostService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { StoreService } from '../core/store/store.service';\nimport { ExternalControlConfig } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HostService {\n  get externalControlConfig(): ExternalControlConfig {\n    const defaultHostname = 'localhost';\n    const defaultPort = '7891';\n    let cachedHostname: string | undefined;\n    let cachedPort: string | undefined;\n    let cachedKey: string | undefined;\n    const cachedConfig = localStorage.getItem('ngClash');\n    if (cachedConfig) {\n      const ngClashConfig = JSON.parse(cachedConfig);\n      const externalControl = ngClashConfig['externalControl'] ?? {};\n      cachedHostname = externalControl['hostname'] || defaultHostname;\n      cachedPort = externalControl['port'] || defaultPort;\n      cachedKey = externalControl['key'];\n    }\n    return {\n      hostname: cachedHostname ?? defaultHostname,\n      port: cachedPort ?? defaultPort,\n      key: cachedKey ?? '',\n    };\n  }\n\n  set externalControlConfig(externalControl: ExternalControlConfig | null) {\n    if (null) {\n      return;\n    }\n    const cachedConfig = localStorage.getItem('ngClash') ?? '{}';\n    const ngClashConfig = JSON.parse(cachedConfig);\n    ngClashConfig['externalControl'] = externalControl;\n    localStorage.setItem('ngClash', JSON.stringify(ngClashConfig));\n  }\n\n  get host() {\n    return this.externalControlConfig.hostname;\n  }\n\n  get port() {\n    return this.externalControlConfig.port;\n  }\n\n  get hostname() {\n    return `http://${this.host}:${this.port}`;\n  }\n\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocCookiesService {\n  constructor() {}\n\n  getItem(sKey: string): any {\n    return (\n      decodeURIComponent(\n        document.cookie.replace(\n          new RegExp(\n            '(?:(?:^|.*;)\\\\s*' +\n              encodeURIComponent(sKey).replace(/[-.+*]/g, '\\\\$&') +\n              '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'\n          ),\n          '$1'\n        )\n      ) || null\n    );\n  }\n\n  setItem(\n    sKey: string,\n    sValue: string,\n    vEnd?: number | string | Date,\n    sPath?: string,\n    sDomain?: string,\n    bSecure?: string\n  ): boolean {\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\n      return false;\n    }\n    let sExpires = '';\n    if (vEnd) {\n      switch (vEnd.constructor) {\n        case Number:\n          sExpires =\n            vEnd === Infinity\n              ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT'\n              : '; max-age=' + vEnd;\n          break;\n        case String:\n          sExpires = '; expires=' + vEnd;\n          break;\n        case Date:\n          sExpires = '; expires=' + (vEnd as Date).toUTCString();\n          break;\n      }\n    }\n    document.cookie =\n      encodeURIComponent(sKey) +\n      '=' +\n      encodeURIComponent(sValue) +\n      sExpires +\n      (sDomain ? '; domain=' + sDomain : '') +\n      (sPath ? '; path=' + sPath : '') +\n      (bSecure ? '; secure' : '');\n    return true;\n  }\n\n  removeItem(sKey: string, sPath: string, sDomain: string): string | boolean {\n    if (!sKey || !this.hasItem(sKey)) {\n      return false;\n    }\n    document.cookie =\n      encodeURIComponent(sKey) +\n      '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' +\n      (sDomain ? '; domain=' + sDomain : '') +\n      (sPath ? '; path=' + sPath : '');\n    return true;\n  }\n\n  hasItem(sKey: string): boolean {\n    return new RegExp(\n      '(?:^|;\\\\s*)' +\n        encodeURIComponent(sKey).replace(/[-.+*]/g, '\\\\$&') +\n        '\\\\s*\\\\='\n    ).test(document.cookie);\n  }\n}\n","export * from './doc-cookies/doc-cookies.service';\nexport * from './websocket/websocket.service';\n","import { Injectable } from '@angular/core';\nimport { Config, ExternalControlConfig } from '@model';\nimport { Observable, Subject, switchMap } from 'rxjs';\nimport { ClashApiService } from '../../api/clash-api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreService {\n  private dashboardConfigSubject = new Subject<string>();\n\n  dashboardConfig$: Observable<Config> = this.dashboardConfigSubject.pipe(\n    switchMap(() => {\n      return this.clashApiService.fetchConfig();\n    })\n  );\n\n  clashVersion$ = this.clashApiService.fetchVersion();\n\n  configExpired() {\n    this.dashboardConfigSubject.next('new config');\n  }\n\n  fetchVersion() {}\n\n  constructor(private clashApiService: ClashApiService) {}\n}\n","import { WebSocketReadyState } from '@model';\n\nexport class WebsocketService {\n  /**websocket 实例*/\n  instance: WebSocket | null;\n\n  connected = (): boolean => {\n    const instance = this.instance;\n    if (!instance) {\n      return false;\n    }\n    if (\n      instance.readyState === WebSocketReadyState.CONNECTING ||\n      instance.readyState === WebSocketReadyState.OPEN\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /** websocket 关闭 */\n  onClose = () => {\n    const instance = this.instance;\n    if (!instance || !this.connected) {\n      return;\n    }\n    instance.close();\n    this.instance = null;\n  };\n  /** webSocket 已连接 */\n  onopen = (ev: Event): any => {\n    console.log('webSocket 已连接');\n    // this.wsHeartBeatStart();\n  };\n  /** webSocket 已关闭 */\n  onclose = (ev: Event): any => {\n    console.log('webSocket 已关闭');\n    // this.wsHeartBeatStop();\n  };\n\n  onmessage = (data: any) => {};\n\n  onerror = (error: any) => {\n    console.log(error);\n  };\n  /** webSocket 发送消息 */\n  send = (data: any) => {\n    if (!this.instance) {\n      return;\n    }\n    this.instance.send(JSON.stringify(data));\n  };\n  constructor(wsConfig: {\n    url: string;\n    onopen?: WebSocket['onopen'];\n    onerror?: WebSocket['onerror'];\n    onclose?: WebSocket['onclose'];\n    onmessage?: WebSocket['onmessage'];\n  }) {\n    const { url, onopen, onerror, onclose, onmessage } = wsConfig;\n    this.instance = new WebSocket(url);\n    this.instance.onopen = onopen || this.onopen;\n    this.instance.onerror = onerror || this.onerror;\n    this.instance.onclose = onclose || this.onclose;\n    this.instance.onmessage = onmessage || this.onmessage;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, map, pipe, scan } from 'rxjs';\n\nimport { WebsocketService } from '../core';\nimport { HostService } from '../api/host.service';\nimport { Snapshot } from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionService {\n  private connection$ = new Subject<Snapshot>();\n  connectionList: Snapshot | null = null;\n\n  initConnection() {\n    this.connection$.subscribe((data) => {\n      this.connectionList = data;\n    });\n  }\n\n  constructor(private hostService: HostService) {\n    const host = this.hostService.host;\n    const port = this.hostService.port;\n\n    const connectionUrl = `ws://${host}:${port}/connections`;\n    const wsConnection = new WebsocketService({\n      url: connectionUrl,\n      onmessage: (event) => {\n        let data = null;\n        try {\n          data = JSON.parse(event.data) as Snapshot;\n        } catch (error) {\n          console.log(error);\n        }\n        if (data) {\n          this.connection$.next(data);\n        }\n      },\n    });\n    wsConnection.connected();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, catchError, map, of, scan } from 'rxjs';\nimport { WebsocketService } from '../core/websocket/websocket.service';\nimport { HostService } from '../api/host.service';\nimport { Log } from '@model';\n\nenum WSType {\n  'debug',\n  'info',\n  'warn',\n  'error',\n}\n\nconst scanLog = () =>\n  scan((accumulator: Log[], seed: Log) => {\n    accumulator.unshift(seed);\n    return accumulator;\n  }, []);\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  private debug$ = new Subject<string>();\n  private info$ = new Subject<string>();\n  private warn$ = new Subject<string>();\n  private error$ = new Subject<string>();\n\n  public debugLog: Log[] = [];\n  public infoLog: Log[] = [];\n  public warnLog: Log[] = [];\n  public errorLog: Log[] = [];\n\n  initLog() {\n    this.debug$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.debugLog = log;\n      });\n\n    this.info$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.infoLog = log;\n      });\n\n    this.warn$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.warnLog = log;\n      });\n\n    this.error$\n      .pipe(\n        map((log) => JSON.parse(log) as Log),\n        map((log) => ({ ...log, time: new Date() })),\n        scanLog(),\n        catchError(() => {\n          return of([]);\n        })\n      )\n      .subscribe((log) => {\n        this.errorLog = log;\n      });\n  }\n\n  constructor(private hostService: HostService) {\n    const host = this.hostService.host;\n    const port = this.hostService.port;\n\n    const infoUrl = `ws://${host}:${port}/logs?level=info`;\n    const warnUrl = `ws://${host}:${port}/logs?level=warn`;\n    const debugUrl = `ws://${host}:${port}/logs?level=debug`;\n    const errorUrl = `ws://${host}:${port}/logs?level=error`;\n\n    const wsDebug = new WebsocketService({\n      url: debugUrl,\n      onmessage: (event) => {\n        this.debug$.next(event.data);\n      },\n    });\n    const wsInfo = new WebsocketService({\n      url: infoUrl,\n      onmessage: (event) => {\n        this.info$.next(event.data);\n      },\n    });\n    const wsWarn = new WebsocketService({\n      url: warnUrl,\n      onmessage: (event) => {\n        this.warn$.next(event.data);\n      },\n    });\n    const wsErrorUrl = new WebsocketService({\n      url: errorUrl,\n      onmessage: (event) => {\n        this.error$.next(event.data);\n      },\n    });\n\n    wsDebug.connected();\n    wsInfo.connected();\n    wsWarn.connected();\n    wsErrorUrl.connected();\n  }\n}\n"],"names":["LoadingComponent","_","_2","selectors","decls","vars","consts","template","LoadingComponent_Template","rf","ctx","i0","ɵɵelement","CommonModule","CoreModule","_3","declarations","imports","exports","map","shareReplay","Breakpoints","LayoutComponent","ngOnInit","constructor","breakpointObserver","title","showSideNav","isHandset$","observe","Handset","pipe","result","matches","ɵɵdirectiveInject","i1","BreakpointObserver","ngContentSelectors","_c1","LayoutComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵprojection","ɵɵlistener","LayoutComponent_Template_button_click_15_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","toggle","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ɵɵattribute","EventEmitter","MatSelectionList","ɵɵelementContainerStart","MenuComponent_ng_container_1_Template_mat_list_item_click_1_listener","restoredCtx","_r5","nav_r1","$implicit","ctx_r4","ɵɵnextContext","onChange","emit","ɵɵelementContainerEnd","activated","ɵɵtextInterpolate","icon","ɵɵtextInterpolate1","name","MenuComponent","navList","viewQuery","MenuComponent_Query","ɵɵtemplate","MenuComponent_ng_container_1_Template","NavValue","DashboardComponent","handleSideNavActive","menu","toggleSideNavActiveStatus","menuItem","value","router","navigate","relativeTo","route","menuList","compareFn","location","pathname","includes","logService","initLog","connectionService","initConnection","storeService","clashVersion$","subscribe","data","clashVersion","proxies","logs","rules","links","settings","Router","ActivatedRoute","i2","LogService","i3","StoreService","i4","ConnectionService","DashboardComponent_Template","DashboardComponent_Template_app_menu_onChange_2_listener","$event","DashboardComponent_div_9_Template","version","premium","githubPages","ɵɵsanitizeUrl","MaterialModule","DashboardRoutingModule","DashboardModule","RouterModule","routes","path","component","children","redirectTo","pathMatch","loadChildren","then","m","ClashProxyModule","ClashRulesModule","ClashLogsModule","ClashLinksModule","ClashSettingsModule","forChild","ClashMode","ProxyType","UnUsedProxy","PolicyGroupType","WebSocketReadyState","catchError","of","ClashApiService","hostname","hostService","fetchProxyMap","url","http","get","error","console","log","fetchProvideMap","putProxy","proxyName","policyName","put","undefined","fetchConfig","putConfig","body","patchConfig","patch","fetchRules","fetchVersion","ɵɵinject","HttpClient","HostService","factory","ɵfac","providedIn","externalControlConfig","defaultHostname","defaultPort","cachedHostname","cachedPort","cachedKey","cachedConfig","localStorage","getItem","ngClashConfig","JSON","parse","externalControl","port","key","setItem","stringify","host","DocCookiesService","sKey","decodeURIComponent","document","cookie","replace","RegExp","encodeURIComponent","sValue","vEnd","sPath","sDomain","bSecure","test","sExpires","Number","Infinity","String","Date","toUTCString","removeItem","hasItem","Subject","switchMap","configExpired","dashboardConfigSubject","next","clashApiService","dashboardConfig$","WebsocketService","wsConfig","connected","instance","readyState","CONNECTING","OPEN","onClose","close","onopen","ev","onclose","onmessage","onerror","send","WebSocket","connection$","connectionList","connectionUrl","wsConnection","event","scan","WSType","scanLog","accumulator","seed","unshift","debug$","time","debugLog","info$","infoLog","warn$","warnLog","error$","errorLog","infoUrl","warnUrl","debugUrl","errorUrl","wsDebug","wsInfo","wsWarn","wsErrorUrl"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}