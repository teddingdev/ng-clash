{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/interceptors/error-interceptor.ts","./src/app/interceptors/index.ts","./src/app/services/feature/custom-route-reuse-strategy.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n  },\n  {\n    path: 'shared-material',\n    loadChildren: () =>\n      import('./shared/material/material.module').then((m) => m.MaterialModule),\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./features/dashboard/dashboard.module').then(\n        (m) => m.DashboardModule\n      ),\n  },\n  {\n    path: 'unknown',\n    loadChildren: () =>\n      import('./shared/unknown/unknown.module').then((m) => m.UnknownModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = '';\n  GITHUB_REPOSITORY='https://github.com/teddingdev/ng-clash'\n}\n","<router-outlet></router-outlet>\n<a [href]=\"GITHUB_REPOSITORY\" target=\"_blank\" class=\"github-corner\">\n  <svg height=\"32\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" data-view-component=\"true\"\n       class=\"github-logo\">\n    <path\n          d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\">\n    </path>\n  </svg>\n</a>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { httpInterceptorProviders } from './interceptors';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { CustomRouteReuseStrategy } from './services/feature/custom-route-reuse-strategy';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    httpInterceptorProviders,\n    {\n      provide: RouteReuseStrategy,\n      useClass: CustomRouteReuseStrategy,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpRequest,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, catchError, map, mergeMap, of, throwError } from 'rxjs';\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor() {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      map((req) => req),\n      catchError((error) => {\n        console.log(\n          `🍅 -> file: error-interceptor.ts:24 -> ErrorInterceptor -> catchError -> error:`,\n          error\n        );\n        return of();\n      })\n    );\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ErrorInterceptor } from './error-interceptor';\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n];\n","import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy,\n} from '@angular/router';\n\nexport class CustomRouteReuseStrategy extends RouteReuseStrategy {\n  constructor() {\n    super();\n    console.log('24343243');\n  }\n  override store(\n    route: ActivatedRouteSnapshot,\n    handle: DetachedRouteHandle | null\n  ): void {}\n  override shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    console.log(\n      `🍅 -> file: custom-route-reuse-strategy.service.ts:17 -> CustomRouteReuseStrategy -> overrideshouldAttach -> route:`,\n      route\n    );\n    return false;\n  }\n  override shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    console.log(\n      `🍅 -> file: custom-route-reuse-strategy.ts:20 -> CustomRouteReuseStrategy -> overrideshouldDetach -> route:`,\n      route\n    );\n    return false;\n  }\n  override shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    console.log(\n      `🍅 -> file: custom-route-reuse-strategy.ts:30 -> CustomRouteReuseStrategy -> curr:`,\n      curr\n    );\n    console.log(\n      `🍅 -> file: custom-route-reuse-strategy.ts:30 -> CustomRouteReuseStrategy -> future:`,\n      future\n    );\n    return false;\n  }\n  override retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    console.log(\n      `🍅 -> file: custom-route-reuse-strategy.ts:41 -> CustomRouteReuseStrategy -> overrideretrieve -> route:`,\n      route\n    );\n    return null;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","path","redirectTo","pathMatch","loadChildren","then","m","MaterialModule","DashboardModule","UnknownModule","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","consts","template","i0","HttpClientModule","BrowserModule","BrowserAnimationsModule","httpInterceptorProviders","RouteReuseStrategy","CustomRouteReuseStrategy","AppModule","bootstrap","provide","useClass","declarations","catchError","map","of","ErrorInterceptor","intercept","req","next","handle","pipe","error","console","log","factory","HTTP_INTERCEPTORS","multi","store","route","shouldAttach","shouldDetach","shouldReuseRoute","future","curr","retrieve","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}