{"version":3,"file":"src_app_features_clash-settings_clash-settings_module_ts.js","mappings":"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","sources":["./src/app/features/clash-settings/clash-settings-routing.module.ts","./src/app/features/clash-settings/clash-settings.component.ts","./src/app/features/clash-settings/clash-settings.component.html","./src/app/features/clash-settings/clash-settings.module.ts","./src/app/features/clash-settings/components/settings-control/settings-control.component.ts","./src/app/features/clash-settings/components/settings-control/settings-control.component.html","./src/app/features/clash-settings/components/settings/settings.component.ts","./src/app/features/clash-settings/components/settings/settings.component.html"],"sourcesContent":["import { NgModule, OnInit } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClashSettingsComponent } from './clash-settings.component';\nimport { NgClass } from '@angular/common';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClashSettingsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClashSettingsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { HostService } from 'src/app/services/api/host.service';\nimport { StoreService } from 'src/app/services/core/store/store.service';\n\nimport { Config } from '@model';\n\n@Component({\n  selector: 'app-clash-settings',\n  templateUrl: './clash-settings.component.html',\n  styleUrls: ['./clash-settings.component.scss'],\n})\nexport class ClashSettingsComponent implements OnInit {\n  dashboardConfig: Config | null = null;\n\n  /** 外部控制设置 */\n  get externalControlConfig() {\n    return this.hostService.externalControlConfig;\n  }\n\n  updateDashboardConfig() {\n    this.storeService.configExpired();\n  }\n\n  ngOnInit(): void {\n    this.updateDashboardConfig();\n  }\n\n  constructor(\n    private hostService: HostService,\n    private storeService: StoreService\n  ) {\n    this.storeService.dashboardConfig$.subscribe((config) => {\n      this.dashboardConfig = config;\n    });\n  }\n}\n","<app-settings [dashboardConfig]=\"dashboardConfig\" [externalControlConfig]=\"externalControlConfig\"\n              (updateDashboardConfig)=\"updateDashboardConfig()\">\n</app-settings>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/shared/material/material.module';\nimport { ClashSettingsRoutingModule } from './clash-settings-routing.module';\n\nimport { ClashSettingsComponent } from './clash-settings.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { SettingsControlComponent } from './components/settings-control/settings-control.component';\n\n@NgModule({\n  declarations: [SettingsComponent, SettingsControlComponent, ClashSettingsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ClashSettingsRoutingModule,\n    MaterialModule,\n  ],\n})\nexport class ClashSettingsModule {}\n","import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\ninterface DialogData {\n  hostname?: string;\n  port?: string;\n  key?: string;\n}\n\n@Component({\n  selector: 'app-settings-control',\n  templateUrl: './settings-control.component.html',\n  styleUrls: ['./settings-control.component.scss'],\n})\nexport class SettingsControlComponent {\n  validateForm: FormGroup;\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onConfirm() {\n    this.dialogRef.close(this.validateForm.value);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<SettingsControlComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.validateForm = this.fb.group({\n      hostname: [],\n      port: [],\n      key: [],\n    });\n    this.validateForm.patchValue(this.data);\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title> 外部控制设置 </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"validateForm\">\n      <div class=\"flex-box\">\n        <div class=\"flex-item\">\n          <div class=\"label\">主机名</div>\n          <div class=\"control\">\n            <div mat-form-field appearance=\"fill\">\n              <mat-label>主机名</mat-label>\n              <input matInput formControlName=\"hostname\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-item\">\n          <div class=\"label\">端口</div>\n          <div class=\"control\">\n            <div mat-form-field appearance=\"fill\">\n              <mat-label>端口</mat-label>\n              <input matInput formControlName=\"port\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-item\">\n          <div class=\"label\">密钥</div>\n          <div class=\"control\">\n            <div mat-form-field appearance=\"fill\">\n              <mat-label>密钥</mat-label>\n              <input matInput formControlName=\"key\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-footer>\n    <div class=\"tip\">\n      请注意，修改该配置项并不会修改你的 Clash\n      配置文件，请确认修改后的外部控制地址和 Clash\n      配置文件内的地址一致，否则会导致 Dashboard 无法连接。\n    </div>\n  </mat-card-footer>\n  <mat-card-actions class=\"actions\">\n    <button class=\"action\" type=\"button\" mat-raised-button (click)=\"onCancel()\">取消</button>\n    <button class=\"action\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"onConfirm()\">确定</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ClashApiService } from '@service';\n\nimport { ClashMode, Config, ExternalControlConfig } from '@model';\nimport { SettingsControlComponent } from '../settings-control/settings-control.component';\nimport { StoreService } from 'src/app/services/core/store/store.service';\nimport { filter } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { KeyValue } from '@angular/common';\nimport { HostService } from 'src/app/services/api/host.service';\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n}\n\nfunction isNonNullable<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== void 0;\n}\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent implements OnInit {\n  @Input()\n  set dashboardConfig(value: Config | null) {\n    if (value) {\n      this.validateForm.reset(value);\n    }\n    this._dashboardConfig = value;\n  }\n\n  get dashboardConfig() {\n    return this._dashboardConfig;\n  }\n\n  _dashboardConfig: Config | null = null;\n\n  @Input()\n  externalControlConfig: ExternalControlConfig | null = null;\n\n  @Output()\n  updateDashboardConfig = new EventEmitter();\n\n  clashMode = ClashMode;\n  validateForm: FormGroup;\n\n  @Output()\n  change = new EventEmitter();\n\n  openDialog() {\n    const dialogRef = this.dialog.open<\n      SettingsControlComponent,\n      ExternalControlConfig | null,\n      ExternalControlConfig\n    >(SettingsControlComponent, {\n      width: '600px',\n      data: this.externalControlConfig,\n    });\n    dialogRef\n      .afterClosed()\n      .pipe(filter(isNonNullable))\n      .subscribe((result) => {\n        if (result) {\n          this.hostService.externalControlConfig = result;\n        }\n      });\n  }\n\n  save() {\n    const { mode, ...rest } = this.validateForm.value;\n    this.clashApiService\n      .patchConfig({\n        ...rest,\n        mode: ClashMode[mode as keyof typeof ClashMode],\n      })\n      .subscribe((res) => {\n        if (res === null) {\n          this._snackBar.open('success', 'close', {\n            duration: 3000,\n          });\n          // 重置表单默认值为此时ui中的数据,此操作将影响保存按钮的颜色\n          this.validateForm.reset(this.validateForm.value);\n          this.updateDashboardConfig.emit('');\n        } else if (res === void 0) {\n          this._snackBar.open('error', 'close', {\n            duration: 3000,\n          });\n        }\n      });\n  }\n\n  KVCompareFn<K extends string, V extends string>(\n    a: KeyValue<K, V>,\n    b: KeyValue<K, V>\n  ): number {\n    return 0;\n  }\n\n  ngOnInit(): void {}\n\n  constructor(\n    private fb: FormBuilder,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private hostService: HostService,\n    private clashApiService: ClashApiService\n  ) {\n    this.validateForm = this.fb.group({\n      port: [null],\n      'socks-port': [null],\n      'redir-port': [null],\n      'tproxy-port': [null],\n      'mixed-port': [null],\n      'allow-lan': [null],\n      'bind-address': [null],\n      'log-level': [null],\n      mode: [null],\n      ipv6: [null],\n    });\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"validateForm\">\n    <mat-card>\n      <mat-card-content>\n        <div class=\"flex-box\">\n          <div class=\"flex-item\">\n            <div class=\"label\">开机时启动</div>\n            <div class=\"control\">\n              <mat-slide-toggle labelPosition=\"before\" disabled>\n              </mat-slide-toggle>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">语言</div>\n            <div class=\"control\">\n              <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n                <mat-button-toggle value=\"bold\">中文</mat-button-toggle>\n                <mat-button-toggle value=\"italic\">English</mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">设为系统代理</div>\n            <div class=\"control\">\n              <mat-slide-toggle labelPosition=\"before\" disabled>\n              </mat-slide-toggle>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">允许来自局域网的连接</div>\n            <div class=\"control\">\n              <mat-slide-toggle formControlName=\"allow-lan\" labelPosition=\"before\">\n              </mat-slide-toggle>\n            </div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <br />\n    <mat-card>\n      <mat-card-content>\n        <div class=\"flex-box\">\n          <div class=\"flex-item\">\n            <div class=\"label\">代理模式</div>\n            <div class=\"control\">\n              <mat-button-toggle-group formControlName=\"mode\">\n                <mat-button-toggle *ngFor=\"let mode of clashMode | keyvalue : KVCompareFn\" [value]=\"mode.key\">\n                  {{ mode.value }}\n                </mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">Socks5 代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Socks5 代理端口</mat-label>\n                <input matInput type=\"number\" formControlName=\"socks-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">HTTP 代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>HTTP 代理端口</mat-label>\n                <input matInput type=\"number\" formControlName=\"redir-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">混合代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>混合代理端口</mat-label>\n                <input matInput type=\"number\" formControlName=\"mixed-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">外部控制设置</div>\n            <div class=\"control\">\n              <div (click)=\"openDialog()\" class=\"external-config\">\n                <span>{{ externalControlConfig?.hostname }}</span>\n                <span>:</span>\n                <span>{{externalControlConfig?.port}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </form>\n\n  <div class=\"save\">\n    <button mat-fab [color]=\"validateForm.pristine ? 'primary' : 'accent'\" (click)=\"save()\">\n      <mat-icon>save</mat-icon>\n    </button>\n  </div>\n\n</div>\n"],"names":["RouterModule","ClashSettingsComponent","routes","path","component","ClashSettingsRoutingModule","_","_2","_3","forChild","imports","i1","exports","externalControlConfig","hostService","updateDashboardConfig","storeService","configExpired","ngOnInit","constructor","dashboardConfig","dashboardConfig$","subscribe","config","i0","ɵɵdirectiveInject","HostService","i2","StoreService","selectors","decls","vars","consts","template","ClashSettingsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ClashSettingsComponent_Template_app_settings_updateDashboardConfig_0_listener","ɵɵelementEnd","ɵɵproperty","CommonModule","FormsModule","ReactiveFormsModule","MaterialModule","SettingsComponent","SettingsControlComponent","ClashSettingsModule","declarations","MAT_DIALOG_DATA","onCancel","dialogRef","close","onConfirm","validateForm","value","fb","data","group","hostname","port","key","patchValue","FormBuilder","MatDialogRef","SettingsControlComponent_Template","ɵɵtext","ɵɵelement","SettingsControlComponent_Template_button_click_35_listener","SettingsControlComponent_Template_button_click_37_listener","ɵɵadvance","EventEmitter","ClashMode","filter","mode_r1","ɵɵtextInterpolate1","isNonNullable","reset","_dashboardConfig","openDialog","dialog","open","width","afterClosed","pipe","result","save","mode","rest","clashApiService","patchConfig","res","_snackBar","duration","emit","KVCompareFn","a","b","clashMode","change","ipv6","MatDialog","i3","MatSnackBar","i4","i5","ClashApiService","inputs","outputs","SettingsComponent_Template","ɵɵtemplate","SettingsComponent_mat_button_toggle_38_Template","SettingsComponent_Template_div_click_68_listener","SettingsComponent_Template_button_click_76_listener","ɵɵpipeBind2","ɵɵtextInterpolate","pristine"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}