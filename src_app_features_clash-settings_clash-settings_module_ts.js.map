{"version":3,"file":"src_app_features_clash-settings_clash-settings_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACa;;;AAGpE,MAAME,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEH,6EAAsBA;CAClC,CACF;AAMK,MAAOI,0BAA0B;AAA1BA,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA;AAA0B;AAA1BA,0BAA0B;YAH3BL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,0BAA0B;IAAAE,UAAAA,yDAAAA;IAAAC,UAF3BR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACHlB,MAAOC,sBAAsB;EAEjC;EACA,IAAIQ,qBAAqB;IACvB,OAAO,IAAI,CAACC,YAAY,CAACD,qBAAqB;EAChD;EAGAE,QAAQ,IAAU;EAElBC,YACUF,YAA0B,EAC1BG,eAAgC;IADhC,iBAAY,GAAZH,YAAY;IACZ,oBAAe,GAAfG,eAAe;IAEvB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,eAAe,CAACE,WAAW,EAAE;EAC5D;;AAfWd,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXnCC,uDAAAA,sBACe;;;;MADDA,wDAAAA,oBAAAA,yDAAAA,6BAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCX;AACmB;AACO;AACI;AAET;AACS;AACuB;;AAY9F,MAAOO,mBAAmB;AAAnBA,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA;AAAmB;AAAnBA,mBAAmB;YAP5BN,yDAAY,EACZC,uDAAW,EACXC,+DAAmB,EACnBnB,sFAA0B,EAC1BoB,mFAAc;AAAA;;sHAGLG,mBAAmB;IAAAC,eATfH,sFAAiB,EAAEC,6GAAwB,EAAE1B,6EAAsB;IAAAM,UAEhFe,yDAAY,EACZC,uDAAW,EACXC,+DAAmB,EACnBnB,sFAA0B,EAC1BoB,mFAAc;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACfuD;;;;;;;;AAanE,MAAOE,wBAAwB;EAGnCI,QAAQ;IACN,IAAI,CAACC,SAAS,CAACC,KAAK,EAAE;EACxB;EAEAC,SAAS;IACP,IAAI,CAACF,SAAS,CAACC,KAAK,CAAC,IAAI,CAACE,YAAY,CAACC,KAAK,CAAC;EAC/C;EAEAxB,YACUyB,EAAe,EAChBL,SAAiD,EACxBM,IAAgB;IAFxC,OAAE,GAAFD,EAAE;IACH,cAAS,GAATL,SAAS;IACgB,SAAI,GAAJM,IAAI;IAEpC,IAAI,CAACH,YAAY,GAAG,IAAI,CAACE,EAAE,CAACE,KAAK,CAAC;MAChCC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE;KACN,CAAC;IACF,IAAI,CAACP,YAAY,CAACQ,UAAU,CAAC,IAAI,CAACL,IAAI,CAAC;EACzC;;AAtBWX,wBAAwB;mBAAxBA,wBAAwB,iUAczBG,qEAAe;AAAA;AAddH,wBAAwB;QAAxBA,wBAAwB;EAAAX;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfrCC,4DAAAA,eAAU;MAEWA,oDAAAA,6CAAO;MAAAA,0DAAAA,EAAiB;MAE3CA,4DAAAA,uBAAkB;MAISA,oDAAAA,yBAAG;MAAAA,0DAAAA,EAAM;MAC5BA,4DAAAA,cAAqB;MAENA,oDAAAA,0BAAG;MAAAA,0DAAAA,EAAY;MAC1BA,uDAAAA,gBAA6C;MAC/CA,0DAAAA,EAAiB;MAGrBA,4DAAAA,cAAuB;MACFA,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAM;MAC3BA,4DAAAA,cAAqB;MAENA,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAY;MACzBA,uDAAAA,gBAAyC;MAC3CA,0DAAAA,EAAiB;MAGrBA,4DAAAA,cAAuB;MACFA,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAM;MAC3BA,4DAAAA,cAAqB;MAENA,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAY;MACzBA,uDAAAA,gBAAwC;MAC1CA,0DAAAA,EAAiB;MAM3BA,4DAAAA,uBAAiB;MAEbA,oDAAAA,yXAGF;MAAAA,0DAAAA,EAAM;MAERA,4DAAAA,4BAAkC;MACuBA,wDAAAA;QAAA,OAASuB,cAAU;MAAA,EAAC;MAACvB,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAS;MACvFA,4DAAAA,kBAA6F;MAAtBA,wDAAAA;QAAA,OAASuB,eAAW;MAAA,EAAC;MAACvB,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAS;;;MAzClGA,uDAAAA,GAA0B;MAA1BA,wDAAAA,+BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL2C;AAOb;AACwB;AAElD;;;;;;;;;;;;;;;;;ICoCxBA,4DAAAA,4BAAkF;IAChFA,oDAAAA,GACF;IAAAA,0DAAAA,EAAoB;;;;IAFyCA,wDAAAA,wBAAoB;IAC/EA,uDAAAA,GACF;IADEA,gEAAAA,uBACF;;;AD5BhB,SAAS2B,aAAa,CAAIZ,KAA2B;EACnD,OAAOA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC;AAC3C;AAOM,MAAOV,iBAAiB;EAC5B,IACIuB,eAAe,CAACb,KAAoB;IACtC,IAAIA,KAAK,EAAE;MACT,IAAI,CAACD,YAAY,CAACe,KAAK,CAACd,KAAK,CAAC;;EAElC;EAEA,IAAIa,eAAe;IACjB,OAAO,IAAI,CAACE,gBAAgB;EAC9B;EAaAC,UAAU;IACR,MAAMpB,SAAS,GAAG,IAAI,CAACqB,MAAM,CAACC,IAAI,CAIhC3B,kGAAwB,EAAE;MAC1B4B,KAAK,EAAE,OAAO;MACdjB,IAAI,EAAE,IAAI,CAAC7B;KACZ,CAAC;IACFuB,SAAS,CACNwB,WAAW,EAAE,CACbC,IAAI,CAACV,sDAAM,CAACC,aAAa,CAAC,CAAC,CAC3BU,SAAS,CAAEC,MAAM,IAAI;MACpB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACjD,YAAY,CAACD,qBAAqB,GAAGkD,MAAM;;IAEpD,CAAC,CAAC;EACN;EAEAC,IAAI;IACF,IAAI,CAAC/C,eAAe,CACjBgD,SAAS,CAAC,IAAI,CAAC1B,YAAY,CAACC,KAAK,CAAC,CAClCsB,SAAS,CAAEI,GAAG,IAAI;MACjB,IAAIA,GAAG,KAAK,IAAI,EAAE;QAChB,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE;UACtCU,QAAQ,EAAE;SACX,CAAC;OACH,MAAM,IAAIF,GAAG,KAAK,KAAK,CAAC,EAAE;QACzB,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE;UACpCU,QAAQ,EAAE;SACX,CAAC;;IAEN,CAAC,CAAC;EACN;EAEArD,QAAQ,IAAU;EAElBC,YACUyB,EAAe,EAChBgB,MAAiB,EAChBU,SAAsB,EACtBrD,YAA0B,EAC1BG,eAAgC;IAJhC,OAAE,GAAFwB,EAAE;IACH,WAAM,GAANgB,MAAM;IACL,cAAS,GAATU,SAAS;IACT,iBAAY,GAAZrD,YAAY;IACZ,oBAAe,GAAfG,eAAe;IArDzB,qBAAgB,GAAkB,IAAI;IAGtC,0BAAqB,GAAiC,IAAI;IAE1D,cAAS,GAAGiC,6CAAS;IAIrB,WAAM,GAAG,IAAID,uDAAY,EAAE;IA8CzB,IAAI,CAACV,YAAY,GAAG,IAAI,CAACE,EAAE,CAACE,KAAK,CAAC;MAChCE,IAAI,EAAE,CAAC,IAAI,CAAC;MACZwB,IAAI,EAAE,CAAC,IAAI,CAAC;MACZ,YAAY,EAAE,CAAC,IAAI,CAAC;MACpB,YAAY,EAAE,CAAC,IAAI,CAAC;MACpB,YAAY,EAAE,CAAC,IAAI,CAAC;MACpB,WAAW,EAAE,CAAC,IAAI,CAAC;MACnB,WAAW,EAAE,CAAC,IAAI;KACnB,CAAC;EACJ;;AA5EWvC,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAV;EAAAkD;IAAAjB;IAAAxC;EAAA;EAAA0D;IAAAC;EAAA;EAAAnD;EAAAC;EAAAC;EAAAC;IAAA;MC7B9BC,4DAAAA,aAAuB;MAMQA,oDAAAA,qCAAK;MAAAA,0DAAAA,EAAM;MAC9BA,4DAAAA,aAAqB;MACnBA,uDAAAA,0BACmB;MACrBA,0DAAAA,EAAM;MAERA,4DAAAA,cAAuB;MACFA,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAM;MAC3BA,4DAAAA,cAAqB;MAEeA,oDAAAA,oBAAE;MAAAA,0DAAAA,EAAoB;MACtDA,4DAAAA,4BAAkC;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAoB;MAInEA,4DAAAA,cAAuB;MACFA,oDAAAA,4CAAM;MAAAA,0DAAAA,EAAM;MAC/BA,4DAAAA,cAAqB;MACnBA,uDAAAA,2BACmB;MACrBA,0DAAAA,EAAM;MAERA,4DAAAA,cAAuB;MACFA,oDAAAA,oEAAU;MAAAA,0DAAAA,EAAM;MACnCA,4DAAAA,cAAqB;MACnBA,uDAAAA,4BACmB;MACrBA,0DAAAA,EAAM;MAKdA,uDAAAA,UAAM;MACNA,4DAAAA,gBAAU;MAIiBA,oDAAAA,gCAAI;MAAAA,0DAAAA,EAAM;MAC7BA,4DAAAA,cAAqB;MAEjBA,wDAAAA,oFAEoB;;MACtBA,0DAAAA,EAA0B;MAG9BA,4DAAAA,cAAuB;MACFA,oDAAAA,uCAAW;MAAAA,0DAAAA,EAAM;MACpCA,4DAAAA,cAAqB;MAENA,oDAAAA,uCAAW;MAAAA,0DAAAA,EAAY;MAClCA,uDAAAA,iBAA4E;MAC9EA,0DAAAA,EAAiB;MAGrBA,4DAAAA,cAAuB;MACFA,oDAAAA,qCAAS;MAAAA,0DAAAA,EAAM;MAClCA,4DAAAA,cAAqB;MAENA,oDAAAA,qCAAS;MAAAA,0DAAAA,EAAY;MAChCA,uDAAAA,iBAA+C;MACjDA,0DAAAA,EAAiB;MAGrBA,4DAAAA,cAAuB;MACFA,oDAAAA,4CAAM;MAAAA,0DAAAA,EAAM;MAC/BA,4DAAAA,cAAqB;MAENA,oDAAAA,4CAAM;MAAAA,0DAAAA,EAAY;MAC7BA,uDAAAA,iBAA4E;MAC9EA,0DAAAA,EAAiB;MAGrBA,4DAAAA,cAAuB;MACFA,oDAAAA,4CAAM;MAAAA,0DAAAA,EAAM;MAC/BA,4DAAAA,cAAqB;MACdA,wDAAAA;QAAA,OAASuB,gBAAY;MAAA,EAAC;MACzBvB,4DAAAA,YAAM;MAAAA,oDAAAA,IAAqC;MAAAA,0DAAAA,EAAO;MAClDA,4DAAAA,YAAM;MAAAA,oDAAAA,SAAC;MAAAA,0DAAAA,EAAO;MACdA,4DAAAA,YAAM;MAAAA,oDAAAA,IAA+B;MAAAA,0DAAAA,EAAO;MAS1DA,4DAAAA,eAAkB;MACuDA,wDAAAA;QAAA,OAASuB,UAAM;MAAA,EAAC;MACrFvB,4DAAAA,gBAAU;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAW;;;MA/FvBA,uDAAAA,GAA0B;MAA1BA,wDAAAA,+BAA0B;MA6CkBA,uDAAAA,IAAuB;MAAvBA,wDAAAA,YAAAA,yDAAAA,uBAAuB;MAqCrDA,uDAAAA,IAAqC;MAArCA,+DAAAA,+EAAqC;MAErCA,uDAAAA,GAA+B;MAA/BA,+DAAAA,2EAA+B;MAUjCA,uDAAAA,GAAsD;MAAtDA,wDAAAA,2DAAsD","sources":["./src/app/features/clash-settings/clash-settings-routing.module.ts","./src/app/features/clash-settings/clash-settings.component.ts","./src/app/features/clash-settings/clash-settings.component.html","./src/app/features/clash-settings/clash-settings.module.ts","./src/app/features/clash-settings/components/settings-control/settings-control.component.ts","./src/app/features/clash-settings/components/settings-control/settings-control.component.html","./src/app/features/clash-settings/components/settings/settings.component.ts","./src/app/features/clash-settings/components/settings/settings.component.html"],"sourcesContent":["import { NgModule, OnInit } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClashSettingsComponent } from './clash-settings.component';\nimport { NgClass } from '@angular/common';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClashSettingsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClashSettingsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Config, ExternalControlConfig } from '@model';\nimport { ClashApiService } from '@service';\nimport { Observable } from 'rxjs';\nimport { StoreService } from 'src/app/services/core/store/store.service';\n\n@Component({\n  selector: 'app-clash-settings',\n  templateUrl: './clash-settings.component.html',\n  styleUrls: ['./clash-settings.component.scss'],\n})\nexport class ClashSettingsComponent implements OnInit {\n  dashboardConfig$: Observable<Config>;\n  /** 外部控制设置 */\n  get externalControlConfig() {\n    return this.storeService.externalControlConfig;\n  }\n\n  ngClashConfig: any | null;\n  ngOnInit(): void {}\n\n  constructor(\n    private storeService: StoreService,\n    private clashApiService: ClashApiService\n  ) {\n    this.dashboardConfig$ = this.clashApiService.fetchConfig();\n  }\n}\n","<app-settings [dashboardConfig]=\"dashboardConfig$ | async\" [externalControlConfig]=\"externalControlConfig\">\n</app-settings>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/shared/material/material.module';\nimport { ClashSettingsRoutingModule } from './clash-settings-routing.module';\n\nimport { ClashSettingsComponent } from './clash-settings.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { SettingsControlComponent } from './components/settings-control/settings-control.component';\n\n@NgModule({\n  declarations: [SettingsComponent, SettingsControlComponent, ClashSettingsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ClashSettingsRoutingModule,\n    MaterialModule,\n  ],\n})\nexport class ClashSettingsModule {}\n","import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\ninterface DialogData {\n  hostname?: string;\n  port?: string;\n  key?: string;\n}\n\n@Component({\n  selector: 'app-settings-control',\n  templateUrl: './settings-control.component.html',\n  styleUrls: ['./settings-control.component.scss'],\n})\nexport class SettingsControlComponent {\n  validateForm: FormGroup;\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onConfirm() {\n    this.dialogRef.close(this.validateForm.value);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<SettingsControlComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.validateForm = this.fb.group({\n      hostname: [],\n      port: [],\n      key: [],\n    });\n    this.validateForm.patchValue(this.data);\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title> 外部控制设置 </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"validateForm\">\n      <div class=\"flex-box\">\n        <div class=\"flex-item\">\n          <div class=\"label\">主机名</div>\n          <div class=\"control\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>主机名</mat-label>\n              <input matInput formControlName=\"hostname\" />\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"flex-item\">\n          <div class=\"label\">端口</div>\n          <div class=\"control\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>端口</mat-label>\n              <input matInput formControlName=\"port\" />\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"flex-item\">\n          <div class=\"label\">密钥</div>\n          <div class=\"control\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>密钥</mat-label>\n              <input matInput formControlName=\"key\" />\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-footer>\n    <div class=\"tip\">\n      请注意，修改该配置项并不会修改你的 Clash\n      配置文件，请确认修改后的外部控制地址和 Clash\n      配置文件内的地址一致，否则会导致 Dashboard 无法连接。\n    </div>\n  </mat-card-footer>\n  <mat-card-actions class=\"actions\">\n    <button class=\"action\" type=\"button\" mat-raised-button (click)=\"onCancel()\">取消</button>\n    <button class=\"action\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"onConfirm()\">确定</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ClashApiService } from '@service';\n\nimport { ClashMode, Config, ExternalControlConfig } from '@model';\nimport { SettingsControlComponent } from '../settings-control/settings-control.component';\nimport { StoreService } from 'src/app/services/core/store/store.service';\nimport { filter } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n}\n\nfunction isNonNullable<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== void 0;\n}\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent implements OnInit {\n  @Input()\n  set dashboardConfig(value: Config | null) {\n    if (value) {\n      this.validateForm.reset(value);\n    }\n  }\n\n  get dashboardConfig() {\n    return this._dashboardConfig;\n  }\n\n  _dashboardConfig: Config | null = null;\n\n  @Input()\n  externalControlConfig: ExternalControlConfig | null = null;\n\n  clashMode = ClashMode;\n  validateForm: FormGroup;\n\n  @Output()\n  change = new EventEmitter();\n\n  openDialog() {\n    const dialogRef = this.dialog.open<\n      SettingsControlComponent,\n      ExternalControlConfig | null,\n      ExternalControlConfig\n    >(SettingsControlComponent, {\n      width: '600px',\n      data: this.externalControlConfig,\n    });\n    dialogRef\n      .afterClosed()\n      .pipe(filter(isNonNullable))\n      .subscribe((result) => {\n        if (result) {\n          this.storeService.externalControlConfig = result;\n        }\n      });\n  }\n\n  save() {\n    this.clashApiService\n      .putConfig(this.validateForm.value)\n      .subscribe((res) => {\n        if (res === null) {\n          this._snackBar.open('success', 'close', {\n            duration: 3000,\n          });\n        } else if (res === void 0) {\n          this._snackBar.open('error', 'close', {\n            duration: 3000,\n          });\n        }\n      });\n  }\n\n  ngOnInit(): void {}\n\n  constructor(\n    private fb: FormBuilder,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private storeService: StoreService,\n    private clashApiService: ClashApiService\n  ) {\n    this.validateForm = this.fb.group({\n      port: [null],\n      mode: [null],\n      'socks-port': [null],\n      'redir-port': [null],\n      'mixed-port': [null],\n      'allow-lan': [null],\n      'log-level': [null],\n    });\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"validateForm\">\n    <mat-card>\n      <mat-card-content>\n        <div class=\"flex-box\">\n          <div class=\"flex-item\">\n            <div class=\"label\">开机时启动</div>\n            <div class=\"control\">\n              <mat-slide-toggle labelPosition=\"before\" disabled>\n              </mat-slide-toggle>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">语言</div>\n            <div class=\"control\">\n              <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n                <mat-button-toggle value=\"bold\">中文</mat-button-toggle>\n                <mat-button-toggle value=\"italic\">English</mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">设为系统代理</div>\n            <div class=\"control\">\n              <mat-slide-toggle labelPosition=\"before\" disabled>\n              </mat-slide-toggle>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">允许来自局域网的连接</div>\n            <div class=\"control\">\n              <mat-slide-toggle formControlName=\"allow-lan\" labelPosition=\"before\">\n              </mat-slide-toggle>\n            </div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <br />\n    <mat-card>\n      <mat-card-content>\n        <div class=\"flex-box\">\n          <div class=\"flex-item\">\n            <div class=\"label\">代理模式</div>\n            <div class=\"control\">\n              <mat-button-toggle-group formControlName=\"mode\">\n                <mat-button-toggle *ngFor=\"let mode of clashMode | keyvalue\" [value]=\"mode.value\">\n                  {{ mode.key }}\n                </mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">Socks5 代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Socks5 代理端口</mat-label>\n                <input formControlName=\"socks-port\" matInput formControlName=\"socks-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">HTTP 代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>HTTP 代理端口</mat-label>\n                <input formControlName=\"redir-port\" matInput />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">混合代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>混合代理端口</mat-label>\n                <input formControlName=\"mixed-port\" matInput formControlName=\"mixed-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">外部控制设置</div>\n            <div class=\"control\">\n              <div (click)=\"openDialog()\" class=\"external-config\">\n                <span>{{ externalControlConfig?.hostname }}</span>\n                <span>:</span>\n                <span>{{externalControlConfig?.port}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </form>\n\n  <div class=\"save\">\n    <button mat-fab [color]=\"validateForm.pristine ? 'primary' : 'accent'\" (click)=\"save()\">\n      <mat-icon>save</mat-icon>\n    </button>\n  </div>\n\n</div>\n"],"names":["RouterModule","ClashSettingsComponent","routes","path","component","ClashSettingsRoutingModule","forChild","imports","exports","externalControlConfig","storeService","ngOnInit","constructor","clashApiService","dashboardConfig$","fetchConfig","selectors","decls","vars","consts","template","i0","CommonModule","FormsModule","ReactiveFormsModule","MaterialModule","SettingsComponent","SettingsControlComponent","ClashSettingsModule","declarations","MAT_DIALOG_DATA","onCancel","dialogRef","close","onConfirm","validateForm","value","fb","data","group","hostname","port","key","patchValue","ctx","EventEmitter","ClashMode","filter","isNonNullable","dashboardConfig","reset","_dashboardConfig","openDialog","dialog","open","width","afterClosed","pipe","subscribe","result","save","putConfig","res","_snackBar","duration","mode","inputs","outputs","change"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}