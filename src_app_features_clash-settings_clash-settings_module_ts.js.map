{"version":3,"file":"src_app_features_clash-settings_clash-settings_module_ts.js","mappings":"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","sources":["./src/app/features/clash-settings/clash-settings-routing.module.ts","./src/app/features/clash-settings/clash-settings.component.ts","./src/app/features/clash-settings/clash-settings.component.html","./src/app/features/clash-settings/clash-settings.module.ts","./src/app/features/clash-settings/components/settings-control/settings-control.component.ts","./src/app/features/clash-settings/components/settings-control/settings-control.component.html","./src/app/features/clash-settings/components/settings/settings.component.ts","./src/app/features/clash-settings/components/settings/settings.component.html"],"sourcesContent":["import { NgModule, OnInit } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClashSettingsComponent } from './clash-settings.component';\nimport { NgClass } from '@angular/common';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClashSettingsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClashSettingsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { HostService } from 'src/app/services/api/host.service';\nimport { StoreService } from 'src/app/services/core/store/store.service';\n\nimport { Config } from '@model';\n\n@Component({\n  selector: 'app-clash-settings',\n  templateUrl: './clash-settings.component.html',\n  styleUrls: ['./clash-settings.component.scss'],\n})\nexport class ClashSettingsComponent implements OnInit {\n  dashboardConfig: Config | null = null;\n\n  /** 外部控制设置 */\n  get externalControlConfig() {\n    return this.hostService.externalControlConfig;\n  }\n\n  updateDashboardConfig() {\n    this.storeService.configExpired();\n  }\n\n  ngOnInit(): void {\n    this.updateDashboardConfig();\n  }\n\n  constructor(\n    private hostService: HostService,\n    private storeService: StoreService\n  ) {\n    this.storeService.dashboardConfig$.subscribe((config) => {\n      this.dashboardConfig = config;\n    });\n  }\n}\n","<app-settings [dashboardConfig]=\"dashboardConfig\" [externalControlConfig]=\"externalControlConfig\"\n              (updateDashboardConfig)=\"updateDashboardConfig()\">\n</app-settings>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/shared/material/material.module';\nimport { ClashSettingsRoutingModule } from './clash-settings-routing.module';\n\nimport { ClashSettingsComponent } from './clash-settings.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { SettingsControlComponent } from './components/settings-control/settings-control.component';\n\n@NgModule({\n  declarations: [SettingsComponent, SettingsControlComponent, ClashSettingsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ClashSettingsRoutingModule,\n    MaterialModule,\n  ],\n})\nexport class ClashSettingsModule {}\n","import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\ninterface DialogData {\n  hostname?: string;\n  port?: string;\n  key?: string;\n}\n\n@Component({\n  selector: 'app-settings-control',\n  templateUrl: './settings-control.component.html',\n  styleUrls: ['./settings-control.component.scss'],\n})\nexport class SettingsControlComponent {\n  validateForm: FormGroup;\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onConfirm() {\n    this.dialogRef.close(this.validateForm.value);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<SettingsControlComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.validateForm = this.fb.group({\n      hostname: [],\n      port: [],\n      key: [],\n    });\n    this.validateForm.patchValue(this.data);\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title> 外部控制设置 </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"validateForm\">\n      <div class=\"flex-box\">\n        <div class=\"flex-item\">\n          <div class=\"label\">主机名</div>\n          <div class=\"control\">\n            <div mat-form-field appearance=\"fill\">\n              <mat-label>主机名</mat-label>\n              <input matInput formControlName=\"hostname\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-item\">\n          <div class=\"label\">端口</div>\n          <div class=\"control\">\n            <div mat-form-field appearance=\"fill\">\n              <mat-label>端口</mat-label>\n              <input matInput formControlName=\"port\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"flex-item\">\n          <div class=\"label\">密钥</div>\n          <div class=\"control\">\n            <div mat-form-field appearance=\"fill\">\n              <mat-label>密钥</mat-label>\n              <input matInput formControlName=\"key\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-footer>\n    <div class=\"tip\">\n      请注意，修改该配置项并不会修改你的 Clash\n      配置文件，请确认修改后的外部控制地址和 Clash\n      配置文件内的地址一致，否则会导致 Dashboard 无法连接。\n    </div>\n  </mat-card-footer>\n  <mat-card-actions class=\"actions\">\n    <button class=\"action\" type=\"button\" mat-raised-button (click)=\"onCancel()\">取消</button>\n    <button class=\"action\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"onConfirm()\">确定</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ClashApiService } from '@service';\n\nimport { ClashMode, Config, ExternalControlConfig } from '@model';\nimport { SettingsControlComponent } from '../settings-control/settings-control.component';\nimport { StoreService } from 'src/app/services/core/store/store.service';\nimport { filter } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { KeyValue } from '@angular/common';\nimport { HostService } from 'src/app/services/api/host.service';\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n}\n\nfunction isNonNullable<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== void 0;\n}\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent implements OnInit {\n  @Input()\n  set dashboardConfig(value: Config | null) {\n    if (value) {\n      this.validateForm.reset(value);\n    }\n    this._dashboardConfig = value;\n  }\n\n  get dashboardConfig() {\n    return this._dashboardConfig;\n  }\n\n  _dashboardConfig: Config | null = null;\n\n  @Input()\n  externalControlConfig: ExternalControlConfig | null = null;\n\n  @Output()\n  updateDashboardConfig = new EventEmitter();\n\n  clashMode = ClashMode;\n  validateForm: FormGroup;\n\n  @Output()\n  change = new EventEmitter();\n\n  openDialog() {\n    const dialogRef = this.dialog.open<\n      SettingsControlComponent,\n      ExternalControlConfig | null,\n      ExternalControlConfig\n    >(SettingsControlComponent, {\n      width: '600px',\n      data: this.externalControlConfig,\n    });\n    dialogRef\n      .afterClosed()\n      .pipe(filter(isNonNullable))\n      .subscribe((result) => {\n        if (result) {\n          this.hostService.externalControlConfig = result;\n        }\n      });\n  }\n\n  save() {\n    const { mode, ...rest } = this.validateForm.value;\n    this.clashApiService\n      .patchConfig({\n        ...rest,\n        mode: ClashMode[mode as keyof typeof ClashMode],\n      })\n      .subscribe((res) => {\n        if (res === null) {\n          this._snackBar.open('success', 'close', {\n            duration: 3000,\n          });\n          // 重置表单默认值为此时ui中的数据,此操作将影响保存按钮的颜色\n          this.validateForm.reset(this.validateForm.value);\n          this.updateDashboardConfig.emit('');\n        } else if (res === void 0) {\n          this._snackBar.open('error', 'close', {\n            duration: 3000,\n          });\n        }\n      });\n  }\n\n  KVCompareFn<K extends string, V extends string>(\n    a: KeyValue<K, V>,\n    b: KeyValue<K, V>\n  ): number {\n    return 0;\n  }\n\n  ngOnInit(): void {}\n\n  constructor(\n    private fb: FormBuilder,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private hostService: HostService,\n    private clashApiService: ClashApiService\n  ) {\n    this.validateForm = this.fb.group({\n      port: [null],\n      'socks-port': [null],\n      'redir-port': [null],\n      'tproxy-port': [null],\n      'mixed-port': [null],\n      'allow-lan': [null],\n      'bind-address': [null],\n      'log-level': [null],\n      mode: [null],\n      ipv6: [null],\n    });\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"validateForm\">\n    <mat-card>\n      <mat-card-content>\n        <div class=\"flex-box\">\n          <div class=\"flex-item\">\n            <div class=\"label\">开机时启动</div>\n            <div class=\"control\">\n              <mat-slide-toggle labelPosition=\"before\" disabled>\n              </mat-slide-toggle>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">语言</div>\n            <div class=\"control\">\n              <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n                <mat-button-toggle value=\"bold\">中文</mat-button-toggle>\n                <mat-button-toggle value=\"italic\">English</mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">设为系统代理</div>\n            <div class=\"control\">\n              <mat-slide-toggle labelPosition=\"before\" disabled>\n              </mat-slide-toggle>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">允许来自局域网的连接</div>\n            <div class=\"control\">\n              <mat-slide-toggle formControlName=\"allow-lan\" labelPosition=\"before\">\n              </mat-slide-toggle>\n            </div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <br />\n    <mat-card>\n      <mat-card-content>\n        <div class=\"flex-box\">\n          <div class=\"flex-item\">\n            <div class=\"label\">代理模式</div>\n            <div class=\"control\">\n              <mat-button-toggle-group formControlName=\"mode\">\n                <mat-button-toggle *ngFor=\"let mode of clashMode | keyvalue : KVCompareFn\" [value]=\"mode.key\">\n                  {{ mode.value }}\n                </mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">Socks5 代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Socks5 代理端口</mat-label>\n                <input matInput type=\"number\" formControlName=\"socks-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">HTTP 代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>HTTP 代理端口</mat-label>\n                <input matInput type=\"number\" formControlName=\"redir-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">混合代理端口</div>\n            <div class=\"control\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>混合代理端口</mat-label>\n                <input matInput type=\"number\" formControlName=\"mixed-port\" />\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-item\">\n            <div class=\"label\">外部控制设置</div>\n            <div class=\"control\">\n              <div (click)=\"openDialog()\" class=\"external-config\">\n                <span>{{ externalControlConfig?.hostname }}</span>\n                <span>:</span>\n                <span>{{externalControlConfig?.port}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </form>\n\n  <div class=\"save\">\n    <button mat-fab [color]=\"validateForm.pristine ? 'primary' : 'accent'\" (click)=\"save()\">\n      <mat-icon>save</mat-icon>\n    </button>\n  </div>\n\n</div>\n"],"names":["RouterModule","ClashSettingsComponent","routes","path","component","ClashSettingsRoutingModule","forChild","imports","exports","externalControlConfig","hostService","updateDashboardConfig","storeService","configExpired","ngOnInit","constructor","dashboardConfig$","subscribe","config","dashboardConfig","selectors","decls","vars","consts","template","i0","ctx","CommonModule","FormsModule","ReactiveFormsModule","MaterialModule","SettingsComponent","SettingsControlComponent","ClashSettingsModule","declarations","MAT_DIALOG_DATA","onCancel","dialogRef","close","onConfirm","validateForm","value","fb","data","group","hostname","port","key","patchValue","EventEmitter","ClashMode","filter","isNonNullable","reset","_dashboardConfig","openDialog","dialog","open","width","afterClosed","pipe","result","save","mode","rest","clashApiService","patchConfig","res","_snackBar","duration","emit","KVCompareFn","a","b","ipv6","inputs","outputs","change"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}