{"version":3,"file":"src_app_features_clash-proxy_clash-proxy_module_ts.js","mappings":"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","sources":["./src/app/features/clash-proxy/clash-proxy-routing.module.ts","./src/app/features/clash-proxy/clash-proxy.component.ts","./src/app/features/clash-proxy/clash-proxy.component.html","./src/app/features/clash-proxy/clash-proxy.module.ts","./src/app/features/clash-proxy/components/proxy-card/proxy-card.component.html","./src/app/features/clash-proxy/components/proxy-card/proxy-card.component.ts","./src/app/features/clash-proxy/components/proxy-group/proxy-group.component.ts","./src/app/features/clash-proxy/components/proxy-group/proxy-group.component.html","./src/app/services/feature/clash.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClashProxyComponent } from './clash-proxy.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClashProxyComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClashProxyRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ClashApiService } from '@service';\nimport { PolicyGroup, ProxiesProvider, Proxy } from '@model';\nimport { ClashService } from 'src/app/services/feature/clash.service';\nimport { Observable, Subject, map, takeUntil, tap } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\ntype ViewModel = 'grid_view' | 'view_list';\n\n@Component({\n  selector: 'app-clash-proxy',\n  templateUrl: './clash-proxy.component.html',\n  styleUrls: ['./clash-proxy.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClashProxyComponent implements OnInit, OnDestroy {\n  providers$: Observable<Record<string, ProxiesProvider> | null>;\n  global$: Observable<(Proxy | PolicyGroup)[] | null>;\n  proxies$: Observable<Proxy[] | null>;\n  policyGroups$: Observable<PolicyGroup[] | null>;\n\n  viewModel: ViewModel = 'grid_view';\n\n  /** 用于取消订阅 */\n  stop$ = new Subject();\n\n  toggleViewModel(viewModel: ViewModel) {\n    switch (viewModel) {\n      case 'grid_view':\n        this.viewModel = 'view_list';\n        break;\n      case 'view_list':\n        this.viewModel = 'grid_view';\n        break;\n      default:\n        this.viewModel = 'grid_view';\n        break;\n    }\n  }\n\n  putProxy(data: { proxyName: string; policyName: string }) {\n    const { proxyName, policyName } = data;\n    this.clashService.putProxy(proxyName, policyName).subscribe((res) => {\n      if (res === null) {\n        this._snackBar.open('success', 'close', {\n          duration: 3000,\n        });\n      } else if (res === void 0) {\n        this._snackBar.open('error', 'close', {\n          duration: 3000,\n        });\n      }\n      this.clashService.fetch(new Date().toString());\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.stop$.next('stop');\n  }\n\n  constructor(\n    private _snackBar: MatSnackBar,\n    // private ref: ChangeDetectorRef,\n    private clashService: ClashService\n  ) {\n    this.proxies$ = this.clashService.proxies$.pipe(\n      map((data) => data.proxies)\n    );\n    this.global$ = this.clashService.proxies$.pipe(map((data) => data.global));\n    this.policyGroups$ = this.clashService.proxies$.pipe(\n      map((data) => data.policyGroups)\n    );\n    this.providers$ = this.clashService.fetchProviders();\n  }\n\n  inputModel = '124';\n\n  change(data: any) {\n    console.log(data);\n  }\n}\n","<input id=\"test\" [(ngModel)]=\"inputModel\" (change)=\"change($event)\">{{ inputModel }}\n\n<div class=\"container\">\n  <div class=\"head\">策略组</div>\n  <app-proxy-group [policyGroups]=\"policyGroups$ | async\" (onPutProxy)=\"putProxy($event)\">\n  </app-proxy-group>\n\n  <div class=\"head\">\n    <div class=\"head-left\">代理</div>\n    <div class=\"head-rigt\">\n      <span class=\"view-model-icon\" (click)=\"toggleViewModel(viewModel)\">\n        <mat-icon matListItemIcon>{{ viewModel }}</mat-icon>\n      </span>\n    </div>\n  </div>\n  <app-proxy-card [proxies]=\"proxies$ | async\" [viewModel]=\"viewModel\"></app-proxy-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClashProxyComponent } from './clash-proxy.component';\n\nimport { CoreModule } from 'src/app/core/core.module';\nimport { ClashProxyRoutingModule } from './clash-proxy-routing.module';\nimport { MaterialModule } from 'src/app/shared/material/material.module';\nimport { ProxyGroupComponent } from './components/proxy-group/proxy-group.component';\nimport { ProxyCardComponent } from './components/proxy-card/proxy-card.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ClashProxyComponent, ProxyGroupComponent, ProxyCardComponent],\n  imports: [\n    CommonModule,\n    ClashProxyRoutingModule,\n    MaterialModule,\n    CoreModule,\n    FormsModule,\n  ],\n})\nexport class ClashProxyModule {}\n","<div class=\"proxy-card-wrap\" matRipple>\n  <div class=\"proxy-card\" [ngClass]=\"{'proxy-card-list':viewModel === 'view_list'}\" *ngFor=\"let proxy of proxies\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>{{proxy.type}}</mat-card-title>\n        <mat-card-subtitle>{{proxy.name}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-actions align=\"end\">\n        <!-- <button mat-button>LIKE</button>\n        <button mat-button>SHARE</button> -->\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Proxy } from '@model';\n\ntype ViewModel = 'grid_view' | 'view_list';\n\n@Component({\n  selector: 'app-proxy-card',\n  templateUrl: './proxy-card.component.html',\n  styleUrls: ['./proxy-card.component.scss'],\n})\nexport class ProxyCardComponent {\n  @Input() proxies: Proxy[] | null = null;\n  @Input() viewModel: ViewModel = 'grid_view';\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MatAccordion } from '@angular/material/expansion';\nimport { PolicyGroup } from '@model';\n\n@Component({\n  selector: 'app-proxy-group',\n  templateUrl: './proxy-group.component.html',\n  styleUrls: ['./proxy-group.component.scss'],\n})\nexport class ProxyGroupComponent {\n  @ViewChild(MatAccordion) accordion?: MatAccordion;\n  @Input() policyGroups: PolicyGroup[] | null = null;\n\n  @Output() onPutProxy = new EventEmitter<{\n    policyName: string;\n    proxyName: string;\n  }>();\n\n  handlePutProxy(policyName: string, proxyName: string) {\n    this.onPutProxy.emit({\n      policyName,\n      proxyName,\n    });\n  }\n}\n","<ng-content></ng-content>\n<mat-accordion multi>\n  <mat-expansion-panel *ngFor=\"let policyGroup of policyGroups;let i = index\" #panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"title\">\n        <div class=\"policy-badge\">\n          <div>{{ policyGroup.all.length }}</div>\n        </div>\n        <div class=\"policy-name\">{{ policyGroup.name }}</div>\n      </mat-panel-title>\n      <mat-panel-description>\n        <div class=\"policy-type\">[ {{ policyGroup.type }} ]</div>\n        <div class=\"separator\">&rarr;</div>\n        <div class=\"selected\">\n          <mat-chip-option selected [selectable]=\"false\" [disabled]=\"panel.expanded\">\n            {{ policyGroup.now }}\n          </mat-chip-option>\n        </div>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <mat-chip-listbox>\n      <mat-chip-option *ngFor=\"let proxyName of policyGroup.all\" (click)=\"handlePutProxy(policyGroup.name,proxyName)\"\n                       [selected]=\"proxyName === policyGroup.now\" [selectable]=\"false\">\n        {{ proxyName }}\n      </mat-chip-option>\n    </mat-chip-listbox>\n  </mat-expansion-panel>\n</mat-accordion>\n","import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  map,\n  Observable,\n  shareReplay,\n  Subject,\n  switchMap,\n  Timestamp,\n} from 'rxjs';\n\nimport { ClashApiService } from '../api/clash-api.service';\n\nimport {\n  PolicyGroup,\n  PolicyGroupType,\n  Proxies,\n  ProxyProviders,\n  ProxyType,\n  Proxy,\n} from '@model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClashService {\n  proxies$: Observable<{\n    proxies: Proxy[];\n    policyGroups: PolicyGroup[];\n    global: (Proxy | PolicyGroup)[];\n  }>;\n\n  providers$ = new Subject<ProxyProviders>();\n\n  private fetchAction$ = new BehaviorSubject<string>(new Date().toString());\n\n  /**\n   * @param timestamp 时间戳\n   */\n  fetch(timestamp: string) {\n    this.fetchAction$.next(timestamp);\n  }\n\n  fetchProviders() {\n    return this.clashApiService\n      .fetchProvideMap()\n      .pipe(map((res) => res.providers));\n  }\n\n  putProxy(proxyName: string, policyName: string) {\n    return this.clashApiService.putProxy(proxyName, policyName);\n  }\n\n  constructor(private clashApiService: ClashApiService) {\n    this.proxies$ = this.fetchAction$.pipe(\n      switchMap(() => {\n        return this.clashApiService.fetchProxyMap().pipe(\n          map((res) => res.proxies),\n          map((list) => {\n            const proxies = Object.values(list).filter((p) =>\n              Object.values(ProxyType).find((q) => q === p.type)\n            ) as Proxy[];\n            const policyGroups = Object.values(list).filter((p) =>\n              Object.values(PolicyGroupType).find((q) => q === p.type)\n            ) as PolicyGroup[];\n            const global = Object.values(list).filter(\n              (p) => p.name === 'GLOBAL'\n            );\n            return { proxies, policyGroups, global };\n          })\n        );\n      }),\n      shareReplay(1)\n    );\n  }\n}\n"],"names":["RouterModule","ClashProxyComponent","routes","path","component","ClashProxyRoutingModule","forChild","imports","exports","Subject","map","toggleViewModel","viewModel","putProxy","data","proxyName","policyName","clashService","subscribe","res","_snackBar","open","duration","fetch","Date","toString","ngOnInit","ngOnDestroy","stop$","next","constructor","proxies$","pipe","proxies","global$","global","policyGroups$","policyGroups","providers$","fetchProviders","change","console","log","selectors","decls","vars","consts","template","i0","ctx","CommonModule","CoreModule","MaterialModule","ProxyGroupComponent","ProxyCardComponent","FormsModule","ClashProxyModule","declarations","inputs","EventEmitter","MatAccordion","handlePutProxy","onPutProxy","emit","viewQuery","BehaviorSubject","shareReplay","switchMap","PolicyGroupType","ProxyType","ClashService","timestamp","fetchAction$","clashApiService","fetchProvideMap","providers","fetchProxyMap","list","Object","values","filter","p","find","q","type","name","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}