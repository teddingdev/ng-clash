name: github-pages

on:
  push:
    branches: [master]
    paths-ignore: [.github/workflows/**]
  workflow_dispatch:
    branches: [master]

env:
  PROJECT_NAME: ng-clash
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ACTION_BOT_NAME: github-actions[bot]
  ACTION_BOT_EMAIL: github-actions[bot]@users.noreply.github.com
  BRANCH_SOURCE: master
  BRANCH_GITHUB_PAGES: github-pages
  DINGTALK_ROBOT_ACCESS_TOKEN: ${{ secrets.DINGTALK_ROBOT_ACCESS_TOKEN }}
  RENDER_BARK_SERVER: ${{ secrets.RENDER_BARK_SERVER }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout ${{ env.BRANCH_SOURCE }}
        uses: actions/checkout@v3
        with:
          path: ${{ env.BRANCH_SOURCE }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          ls -al
          cd ${{ env.BRANCH_SOURCE }}
          npm install
          npm run prerender

      - name: Checkout ${{ env.BRANCH_GITHUB_PAGES }}
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_GITHUB_PAGES }}
          path: ${{ env.BRANCH_GITHUB_PAGES }}

      - name: Copy Files
        run: |
          rm -rf ./${{ env.BRANCH_GITHUB_PAGES }}/*
          cp -r ./${{ env.BRANCH_SOURCE }}/dist/${{ env.PROJECT_NAME }}/browser/* ./${{ env.BRANCH_GITHUB_PAGES }}
          cp ./${{ env.BRANCH_SOURCE }}/CNAME ./${{ env.BRANCH_GITHUB_PAGES }}
          cp ./${{ env.BRANCH_SOURCE }}/.gitignore ./${{ env.BRANCH_GITHUB_PAGES }}
          date +%Y-%m-%d\ %H:%M:%S\ %z > ./${{ env.BRANCH_GITHUB_PAGES }}/generated.txt
          ls -al ./${{ env.BRANCH_GITHUB_PAGES }}

      - name: Deploy
        run: |
          cd ${{ env.BRANCH_GITHUB_PAGES }}
          git add .
          git config user.name ${{ env.ACTION_BOT_NAME }}
          git config user.email ${{ env.ACTION_BOT_EMAIL }}
          git commit -m "Site updated: $(date +%Y-%m-%d\ %H:%M:%S\ %z)"
          git push

      - name: DingTalk
        run: |
          cd ${{ env.BRANCH_SOURCE }}
          curl --request POST \
          --url 'https://oapi.dingtalk.com/robot/send?access_token='$DINGTALK_ROBOT_ACCESS_TOKEN \
          --header 'Content-Type: application/json' \
          --data '{
            "msgtype": "text",
            "at": {
              isAtAll: true
              },
            "text": {
              "content": "#### Github-actions[bot] Notification #### \n*项目名称： ng-clash \n*日期： '"$(date +%Y-%m-%d\ %H:%M:%S\ %z)"' \n*路径： '"$(pwd)"' \n*Git地址： \n'"$(git remote -v)"' \n*分支： '"$(git name-rev --name-only HEAD)"' \n*最后提交： \n'"$(git show -s)"' \n*Build机器信息： \n'"$(uname -a)"' \n*Build机器IP： \n'"$(ip address | grep 'inet' | awk '{print $2}')"' \n\n我就是我, 是颜色不一样的烟火"
              }
            }'

      - name: Bark
        run: |
          curl --location $RENDER_BARK_SERVER'/push' \
          --header 'Content-Type: application/json; charset=utf-8' \
          --data '{
          "body": "ng-clash build completed ",
          "title": "Github-actions[bot]",
          "device_key": "bark",
          "icon": "https://github.com/fluidicon.png",
          "group": "Github-actions[bot]",
          "url": "https://github.com/teddingdev/ng-clash/actions"
          }'
