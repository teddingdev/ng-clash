{"version":3,"file":"src_app_features_clash-logs_clash-logs_module_ts.js","mappings":"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","sources":["./src/app/features/clash-logs/clash-logs-routing.module.ts","./src/app/features/clash-logs/clash-logs.module.ts","./src/app/features/clash-logs/components/sys-log/sys-log.component.ts","./src/app/features/clash-logs/components/sys-log/sys-log.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SysLogComponent } from './components/sys-log/sys-log.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SysLogComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClashLogsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClashLogsRoutingModule } from './clash-logs-routing.module';\nimport { MaterialModule } from 'src/app/shared/material/material.module';\n\nimport { SysLogComponent } from './components/sys-log/sys-log.component';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { CustomRouteReuseStrategy } from 'src/app/services/feature/custom-route-reuse-strategy';\n\n@NgModule({\n  declarations: [SysLogComponent],\n  imports: [CommonModule, ClashLogsRoutingModule, MaterialModule],\n  providers: [\n    {\n      provide: RouteReuseStrategy,\n      useClass: CustomRouteReuseStrategy,\n    },\n  ],\n})\nexport class ClashLogsModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, RouteReuseStrategy } from '@angular/router';\nimport { Log } from '@model';\nimport { scan } from 'rxjs/operators';\nimport { LogService } from 'src/app/services/feature/log.service';\n\nconst scanLog = () =>\n  scan((accumulator: Log[], seed: Log) => {\n    accumulator.unshift(seed);\n    return accumulator;\n  }, []);\n\n@Component({\n  selector: 'app-clash-logs',\n  templateUrl: './sys-log.component.html',\n  styleUrls: ['./sys-log.component.scss'],\n})\nexport class SysLogComponent {\n  get debugLog() {\n    return this.logService.debugLog;\n  }\n  get infoLog() {\n    return this.logService.infoLog;\n  }\n  get warnLog() {\n    return this.logService.warnLog;\n  }\n  get errorLog() {\n    return this.logService.errorLog;\n  }\n\n  constructor(private logService: LogService) {}\n}\n","<mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"start\">\n  <mat-tab label=\"Info\">\n    <div class=\"log\" *ngFor=\"let log of infoLog\">\n      <div class=\"log-type\">\n        [{{ log.time | date : \"yyyy-MM-dd hh:mm:ss\" }}]\n      </div>\n      <!-- <div class=\"log-type\">{{log.type}}</div> -->\n      <div class=\"log-payload\">{{ log.payload }}</div>\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Debug\">\n    <div class=\"log\" *ngFor=\"let log of debugLog\">\n      <div class=\"log-type\">\n        [{{ log.time | date : \"yyyy-MM-dd hh:mm:ss\" }}]\n      </div>\n      <!-- <div class=\"log-type\">{{log.type}}</div> -->\n      <div class=\"log-payload\">{{ log.payload }}</div>\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Warn\">\n    <div class=\"log\" *ngFor=\"let log of warnLog\">\n      <div class=\"log-type\">\n        [{{ log.time | date : \"yyyy-MM-dd hh:mm:ss\" }}]\n      </div>\n      <!-- <div class=\"log-type\">{{log.type}}</div> -->\n      <div class=\"log-payload\">{{ log.payload }}</div>\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Error\">\n    <div class=\"log\" *ngFor=\"let log of errorLog\">\n      <div class=\"log-type\">\n        [{{ log.time | date : \"yyyy-MM-dd hh:mm:ss\" }}]\n      </div>\n      <!-- <div class=\"log-type\">{{log.type}}</div> -->\n      <div class=\"log-payload\">{{ log.payload }}</div>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n"],"names":["RouterModule","SysLogComponent","routes","path","component","ClashLogsRoutingModule","_","_2","_3","forChild","imports","i1","exports","CommonModule","MaterialModule","RouteReuseStrategy","CustomRouteReuseStrategy","ClashLogsModule","provide","useClass","declarations","scan","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","log_r4","time","ɵɵtextInterpolate","payload","log_r5","log_r6","log_r7","scanLog","accumulator","seed","unshift","debugLog","logService","infoLog","warnLog","errorLog","constructor","ɵɵdirectiveInject","LogService","selectors","decls","vars","consts","template","SysLogComponent_Template","rf","ctx","ɵɵtemplate","SysLogComponent_div_2_Template","SysLogComponent_div_4_Template","SysLogComponent_div_6_Template","SysLogComponent_div_8_Template","ɵɵproperty"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}